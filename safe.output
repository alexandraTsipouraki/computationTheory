State 3 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 59 conflicts: 15 shift/reduce
State 95 conflicts: 1 shift/reduce
State 171 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input prog_body

    3 prog_body: function
    4          | comps
    5          | commands ';'

    6 data_types: TK_INTCONST
    7           | TK_BOOLCONST
    8           | TK_CONSTSTRINGS
    9           | TK_FPCONST

   10 array: TK_IDENTIFIERS '[' ']'
   11      | TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'

   13 comp_vars: TK_IDENTIFIERS
   14          | array
   15          | comp_vars ',' comp_vars

   16 variables: comp_vars ':' data_types

   17 hasht_vars: '#' comp_vars ':' data_types

   18 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types

   24 func_args: TK_IDENTIFIERS ':' data_types
   25          | TK_IDENTIFIERS '[' ']' ':' data_types
   26          | TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types
   27          | func_args ',' func_args

   28 function_head: TK_DEF TK_IDENTIFIERS '(' ')' ':'
   29              | TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   30              | TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   31              | TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   32              | TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   33              | TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'

   34 function_ret: TK_RET
   35             | TK_RET exp

   36 function_end: TK_ENDDEF ';'

   37 function_body: variables
   38              | constants
   39              | statements
   40              | exp

   41 commands: function_body
   42         | commands ';' function_body

   43 function: function_head commands ';' function_end
   44         | function_head function_end

   45 comps: TK_COMP TK_IDENTIFIERS ':' '#' hasht_vars function TK_ENDCOMP

   46 exp: TK_FPCONST
   47    | TK_IDENTIFIERS
   48    | TK_INTCONST
   49    | TK_SIGNOP exp
   50    | exp '=' exp
   51    | exp '*' exp
   52    | exp '/' exp
   53    | exp '%' exp
   54    | exp TK_ASSIGNOP exp
   55    | exp TK_OR exp
   56    | exp TK_AND exp
   57    | exp TK_NOT exp
   58    | exp TK_NEQ exp
   59    | exp TK_EQ exp
   60    | exp '<' exp
   61    | exp '>' exp
   62    | exp TK_SMALLER exp
   63    | exp TK_BIGGER exp
   64    | exp TK_SIGNOP exp
   65    | exp TK_POWER exp
   66    | exp '.' exp
   67    | '(' exp ')'
   68    | '[' exp ']'
   69    | exp '(' exp ')'
   70    | TK_CONSTSTRINGS
   71    | TK_BOOLCONST
   72    | array
   73    | funccall_statement

   74 func_expr: func_expr ',' exp
   75          | exp

   76 statements: iff
   77           | for_statement
   78           | while_statement
   79           | break_statement
   80           | continue_statement
   81           | function_ret

   82 break_statement: TK_BREAK

   83 continue_statement: TK_CONTINUE

   84 if_expr: TK_IF '(' exp ')' ':'

   85 iff: if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | if_expr commands ';' TK_ENDIF

   87 sss_for: TK_INTCONST
   88        | TK_IDENTIFIERS
   89        | sss_for TK_SIGNOP sss_for

   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

   92 while_statement: TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE

   93 funccall_statement: TK_IDENTIFIERS '(' func_expr ')'
   94                   | TK_IDENTIFIERS '(' ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 17 45
    '%' (37) 53
    '(' (40) 28 29 30 31 32 33 67 69 84 92 93 94
    ')' (41) 28 29 30 31 32 33 67 69 84 92 93 94
    '*' (42) 51
    ',' (44) 15 27 74
    '.' (46) 66
    '/' (47) 52
    ':' (58) 16 17 18 19 20 21 22 23 24 25 26 28 29 30 31 32 33 45 84 85 90 91 92
    ';' (59) 5 36 42 43 85 86 90 91 92
    '<' (60) 60
    '=' (61) 18 19 20 21 22 23 50
    '>' (62) 61
    '[' (91) 10 11 12 25 26 68 90 91
    ']' (93) 10 11 12 25 26 68 90 91
    error (256)
    TK_IDENTIFIERS <str> (258) 10 11 12 13 18 19 20 21 22 23 24 25 26 28 29 30 31 32 33 45 47 88 90 91 93 94
    TK_INTCONST <str> (259) 6 11 18 19 26 48 87 90
    TK_FPCONST <str> (260) 9 22 23 46
    TK_BOOLCONST <str> (261) 7 20 71
    TK_CONSTSTRINGS <str> (262) 8 21 70
    TK_DEF <str> (263) 28 29 30 31 32 33
    TK_ENDDEF <str> (264) 36
    TK_RET <str> (265) 34 35
    TK_ARROW <str> (266) 30 31 32 33
    TK_SMALLER <str> (267) 62
    TK_BIGGER <str> (268) 63
    TK_POWER <str> (269) 65
    TK_EQ <str> (270) 59
    TK_NEQ <str> (271) 58
    TK_SIGNOP <str> (272) 19 23 49 64 89
    TK_AND <str> (273) 56
    TK_OR <str> (274) 55
    TK_NOT <str> (275) 57
    TK_ASSIGNOP <str> (276) 54
    TK_CONST <str> (277) 18 19 20 21 22 23
    TK_CONTINUE <str> (278) 83
    TK_BREAK <str> (279) 82
    TK_IF <str> (280) 84
    TK_ENDIF <str> (281) 85 86
    TK_FOR <str> (282) 90 91
    TK_ENDFOR <str> (283) 90 91
    TK_WHILE <str> (284) 92
    TK_ENDWHILE <str> (285) 92
    TK_ELSE <str> (286) 85
    TK_IN <str> (287) 90 91
    TK_COMP <str> (288) 45
    TK_ENDCOMP <str> (289) 45


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    input (51)
        on left: 1 2
        on right: 0 2
    prog_body <str> (52)
        on left: 3 4 5
        on right: 2
    data_types <str> (53)
        on left: 6 7 8 9
        on right: 16 17 18 19 20 21 22 23 24 25 26 30 31
    array <str> (54)
        on left: 10 11 12
        on right: 14 72
    comp_vars <str> (55)
        on left: 13 14 15
        on right: 15 16 17
    variables <str> (56)
        on left: 16
        on right: 37
    hasht_vars <str> (57)
        on left: 17
        on right: 45
    constants <str> (58)
        on left: 18 19 20 21 22 23
        on right: 38
    func_args <str> (59)
        on left: 24 25 26 27
        on right: 27 29 31 33
    function_head <str> (60)
        on left: 28 29 30 31 32 33
        on right: 43 44
    function_ret <str> (61)
        on left: 34 35
        on right: 81
    function_end <str> (62)
        on left: 36
        on right: 43 44
    function_body <str> (63)
        on left: 37 38 39 40
        on right: 41 42
    commands <str> (64)
        on left: 41 42
        on right: 5 42 43 85 86 90 91 92
    function <str> (65)
        on left: 43 44
        on right: 3 45
    comps <str> (66)
        on left: 45
        on right: 4
    exp <str> (67)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 35 40 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 74 75 84 92
    func_expr <str> (68)
        on left: 74 75
        on right: 74 93
    statements <str> (69)
        on left: 76 77 78 79 80 81
        on right: 39
    break_statement <str> (70)
        on left: 82
        on right: 79
    continue_statement <str> (71)
        on left: 83
        on right: 80
    if_expr <str> (72)
        on left: 84
        on right: 85 86
    iff <str> (73)
        on left: 85 86
        on right: 76
    sss_for <str> (74)
        on left: 87 88 89
        on right: 89 90 91
    for_statement <str> (75)
        on left: 90 91
        on right: 77
    while_statement <str> (76)
        on left: 92
        on right: 78
    funccall_statement <str> (77)
        on left: 93 94
        on right: 73


State 0

    0 $accept: . input $end
    1 input: . %empty
    2      | . input prog_body

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . prog_body
    3 prog_body: . function
    4          | . comps
    5          | . commands ';'
   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   28 function_head: . TK_DEF TK_IDENTIFIERS '(' ')' ':'
   29              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   30              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   31              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   32              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   33              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   43 function: . function_head commands ';' function_end
   44         | . function_head function_end
   45 comps: . TK_COMP TK_IDENTIFIERS ':' '#' hasht_vars function TK_ENDCOMP
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    $end             shift, and go to state 2
    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_DEF           shift, and go to state 8
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    TK_COMP          shift, and go to state 17
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    prog_body           go to state 20
    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_head       go to state 25
    function_ret        go to state 26
    function_body       go to state 27
    commands            go to state 28
    function            go to state 29
    comps               go to state 30
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 2

    0 $accept: input $end .

    $default  accept


State 3

   10 array: TK_IDENTIFIERS . '[' ']'
   11      | TK_IDENTIFIERS . '[' TK_INTCONST ']'
   12      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   13 comp_vars: TK_IDENTIFIERS .  [',', ':']
   47 exp: TK_IDENTIFIERS .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', '(', '.', ';']
   93 funccall_statement: TK_IDENTIFIERS . '(' func_expr ')'
   94                   | TK_IDENTIFIERS . '(' ')'

    '['  shift, and go to state 40
    '('  shift, and go to state 41

    '('       [reduce using rule 47 (exp)]
    ','       reduce using rule 13 (comp_vars)
    ':'       reduce using rule 13 (comp_vars)
    $default  reduce using rule 47 (exp)


State 4

   48 exp: TK_INTCONST .

    $default  reduce using rule 48 (exp)


State 5

   46 exp: TK_FPCONST .

    $default  reduce using rule 46 (exp)


State 6

   71 exp: TK_BOOLCONST .

    $default  reduce using rule 71 (exp)


State 7

   70 exp: TK_CONSTSTRINGS .

    $default  reduce using rule 70 (exp)


State 8

   28 function_head: TK_DEF . TK_IDENTIFIERS '(' ')' ':'
   29              | TK_DEF . TK_IDENTIFIERS '(' func_args ')' ':'
   30              | TK_DEF . TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   31              | TK_DEF . TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   32              | TK_DEF . TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   33              | TK_DEF . TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'

    TK_IDENTIFIERS  shift, and go to state 42


State 9

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   34 function_ret: TK_RET .  [';']
   35             | TK_RET . exp
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    $default  reduce using rule 34 (function_ret)

    array               go to state 44
    exp                 go to state 45
    funccall_statement  go to state 39


State 10

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   49    | TK_SIGNOP . exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 46
    funccall_statement  go to state 39


State 11

   18 constants: TK_CONST . TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | TK_CONST . TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | TK_CONST . TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | TK_CONST . TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | TK_CONST . TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | TK_CONST . TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types

    TK_IDENTIFIERS  shift, and go to state 47


State 12

   83 continue_statement: TK_CONTINUE .

    $default  reduce using rule 83 (continue_statement)


State 13

   82 break_statement: TK_BREAK .

    $default  reduce using rule 82 (break_statement)


State 14

   84 if_expr: TK_IF . '(' exp ')' ':'

    '('  shift, and go to state 48


State 15

   90 for_statement: TK_FOR . TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR . TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IDENTIFIERS  shift, and go to state 49


State 16

   92 while_statement: TK_WHILE . '(' exp ')' ':' commands ';' TK_ENDWHILE

    '('  shift, and go to state 50


State 17

   45 comps: TK_COMP . TK_IDENTIFIERS ':' '#' hasht_vars function TK_ENDCOMP

    TK_IDENTIFIERS  shift, and go to state 51


State 18

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   68    | '[' . exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 52
    funccall_statement  go to state 39


State 19

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   67    | '(' . exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 53
    funccall_statement  go to state 39


State 20

    2 input: input prog_body .

    $default  reduce using rule 2 (input)


State 21

   14 comp_vars: array .  [',', ':']
   72 exp: array .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', '(', '.', ';']

    ','       reduce using rule 14 (comp_vars)
    ':'       reduce using rule 14 (comp_vars)
    $default  reduce using rule 72 (exp)


State 22

   15 comp_vars: comp_vars . ',' comp_vars
   16 variables: comp_vars . ':' data_types

    ','  shift, and go to state 54
    ':'  shift, and go to state 55


State 23

   37 function_body: variables .

    $default  reduce using rule 37 (function_body)


State 24

   38 function_body: constants .

    $default  reduce using rule 38 (function_body)


State 25

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   36 function_end: . TK_ENDDEF ';'
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   43 function: function_head . commands ';' function_end
   44         | function_head . function_end
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_ENDDEF        shift, and go to state 56
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_end        go to state 57
    function_body       go to state 27
    commands            go to state 58
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 26

   81 statements: function_ret .

    $default  reduce using rule 81 (statements)


State 27

   41 commands: function_body .

    $default  reduce using rule 41 (commands)


State 28

    5 prog_body: commands . ';'
   42 commands: commands . ';' function_body

    ';'  shift, and go to state 59


State 29

    3 prog_body: function .

    $default  reduce using rule 3 (prog_body)


State 30

    4 prog_body: comps .

    $default  reduce using rule 4 (prog_body)


State 31

   40 function_body: exp .  [';']
   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    '.'          shift, and go to state 77

    $default  reduce using rule 40 (function_body)


State 32

   39 function_body: statements .

    $default  reduce using rule 39 (function_body)


State 33

   79 statements: break_statement .

    $default  reduce using rule 79 (statements)


State 34

   80 statements: continue_statement .

    $default  reduce using rule 80 (statements)


State 35

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   85    | if_expr . commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   86    | if_expr . commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 27
    commands            go to state 78
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 36

   76 statements: iff .

    $default  reduce using rule 76 (statements)


State 37

   77 statements: for_statement .

    $default  reduce using rule 77 (statements)


State 38

   78 statements: while_statement .

    $default  reduce using rule 78 (statements)


State 39

   73 exp: funccall_statement .

    $default  reduce using rule 73 (exp)


State 40

   10 array: TK_IDENTIFIERS '[' . ']'
   11      | TK_IDENTIFIERS '[' . TK_INTCONST ']'
   12      | TK_IDENTIFIERS '[' . TK_IDENTIFIERS ']'

    TK_IDENTIFIERS  shift, and go to state 79
    TK_INTCONST     shift, and go to state 80
    ']'             shift, and go to state 81


State 41

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   74 func_expr: . func_expr ',' exp
   75          | . exp
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   93                   | TK_IDENTIFIERS '(' . func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'
   94                   | TK_IDENTIFIERS '(' . ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    ')'              shift, and go to state 82

    array               go to state 44
    exp                 go to state 83
    func_expr           go to state 84
    funccall_statement  go to state 39


State 42

   28 function_head: TK_DEF TK_IDENTIFIERS . '(' ')' ':'
   29              | TK_DEF TK_IDENTIFIERS . '(' func_args ')' ':'
   30              | TK_DEF TK_IDENTIFIERS . '(' ')' TK_ARROW data_types ':'
   31              | TK_DEF TK_IDENTIFIERS . '(' func_args ')' TK_ARROW data_types ':'
   32              | TK_DEF TK_IDENTIFIERS . '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   33              | TK_DEF TK_IDENTIFIERS . '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'

    '('  shift, and go to state 85


State 43

   10 array: TK_IDENTIFIERS . '[' ']'
   11      | TK_IDENTIFIERS . '[' TK_INTCONST ']'
   12      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   47 exp: TK_IDENTIFIERS .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', '(', ')', '.', ';', ',']
   93 funccall_statement: TK_IDENTIFIERS . '(' func_expr ')'
   94                   | TK_IDENTIFIERS . '(' ')'

    '['  shift, and go to state 40
    '('  shift, and go to state 41

    '('       [reduce using rule 47 (exp)]
    $default  reduce using rule 47 (exp)


State 44

   72 exp: array .

    $default  reduce using rule 72 (exp)


State 45

   35 function_ret: TK_RET exp .  [';']
   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    '.'          shift, and go to state 77

    $default  reduce using rule 35 (function_ret)


State 46

   49 exp: TK_SIGNOP exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   50    | exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 62
    TK_SIGNOP  shift, and go to state 65
    '*'        shift, and go to state 73
    '/'        shift, and go to state 74
    '%'        shift, and go to state 75
    '('        shift, and go to state 76
    '.'        shift, and go to state 77

    $default  reduce using rule 49 (exp)

    Conflict between rule 49 and token TK_SMALLER resolved as reduce (TK_SMALLER < TK_SIGNOP).
    Conflict between rule 49 and token TK_BIGGER resolved as reduce (TK_BIGGER < TK_SIGNOP).
    Conflict between rule 49 and token TK_POWER resolved as shift (TK_SIGNOP < TK_POWER).
    Conflict between rule 49 and token TK_EQ resolved as reduce (TK_EQ < TK_SIGNOP).
    Conflict between rule 49 and token TK_NEQ resolved as reduce (TK_NEQ < TK_SIGNOP).
    Conflict between rule 49 and token TK_SIGNOP resolved as shift (%right TK_SIGNOP).
    Conflict between rule 49 and token TK_AND resolved as reduce (TK_AND < TK_SIGNOP).
    Conflict between rule 49 and token TK_OR resolved as reduce (TK_OR < TK_SIGNOP).
    Conflict between rule 49 and token TK_NOT resolved as reduce (TK_NOT < TK_SIGNOP).
    Conflict between rule 49 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_SIGNOP).
    Conflict between rule 49 and token '=' resolved as reduce ('=' < TK_SIGNOP).
    Conflict between rule 49 and token '<' resolved as reduce ('<' < TK_SIGNOP).
    Conflict between rule 49 and token '>' resolved as reduce ('>' < TK_SIGNOP).
    Conflict between rule 49 and token '*' resolved as shift (TK_SIGNOP < '*').
    Conflict between rule 49 and token '/' resolved as shift (TK_SIGNOP < '/').
    Conflict between rule 49 and token '%' resolved as shift (TK_SIGNOP < '%').
    Conflict between rule 49 and token '(' resolved as shift (TK_SIGNOP < '(').
    Conflict between rule 49 and token '.' resolved as shift (TK_SIGNOP < '.').


State 47

   18 constants: TK_CONST TK_IDENTIFIERS . '=' TK_INTCONST ':' data_types
   19          | TK_CONST TK_IDENTIFIERS . '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | TK_CONST TK_IDENTIFIERS . '=' TK_BOOLCONST ':' data_types
   21          | TK_CONST TK_IDENTIFIERS . '=' TK_CONSTSTRINGS ':' data_types
   22          | TK_CONST TK_IDENTIFIERS . '=' TK_FPCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS . '=' TK_SIGNOP TK_FPCONST ':' data_types

    '='  shift, and go to state 86


State 48

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   84 if_expr: TK_IF '(' . exp ')' ':'
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 87
    funccall_statement  go to state 39


State 49

   90 for_statement: TK_FOR TK_IDENTIFIERS . TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS . TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IN  shift, and go to state 88


State 50

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   92 while_statement: TK_WHILE '(' . exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 89
    funccall_statement  go to state 39


State 51

   45 comps: TK_COMP TK_IDENTIFIERS . ':' '#' hasht_vars function TK_ENDCOMP

    ':'  shift, and go to state 90


State 52

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   68    | '[' exp . ']'
   69    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    ']'          shift, and go to state 91
    '('          shift, and go to state 76
    '.'          shift, and go to state 77


State 53

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   67    | '(' exp . ')'
   69    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    ')'          shift, and go to state 92
    '.'          shift, and go to state 77


State 54

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   15          | comp_vars ',' . comp_vars

    TK_IDENTIFIERS  shift, and go to state 93

    array      go to state 94
    comp_vars  go to state 95


State 55

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   16 variables: comp_vars ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 100


State 56

   36 function_end: TK_ENDDEF . ';'

    ';'  shift, and go to state 101


State 57

   44 function: function_head function_end .

    $default  reduce using rule 44 (function)


State 58

   42 commands: commands . ';' function_body
   43 function: function_head commands . ';' function_end

    ';'  shift, and go to state 102


State 59

    5 prog_body: commands ';' .  [$end, TK_IDENTIFIERS, TK_INTCONST, TK_FPCONST, TK_BOOLCONST, TK_CONSTSTRINGS, TK_DEF, TK_RET, TK_SIGNOP, TK_CONST, TK_CONTINUE, TK_BREAK, TK_IF, TK_FOR, TK_WHILE, TK_COMP, '[', '(']
   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    TK_IDENTIFIERS   [reduce using rule 5 (prog_body)]
    TK_INTCONST      [reduce using rule 5 (prog_body)]
    TK_FPCONST       [reduce using rule 5 (prog_body)]
    TK_BOOLCONST     [reduce using rule 5 (prog_body)]
    TK_CONSTSTRINGS  [reduce using rule 5 (prog_body)]
    TK_RET           [reduce using rule 5 (prog_body)]
    TK_SIGNOP        [reduce using rule 5 (prog_body)]
    TK_CONST         [reduce using rule 5 (prog_body)]
    TK_CONTINUE      [reduce using rule 5 (prog_body)]
    TK_BREAK         [reduce using rule 5 (prog_body)]
    TK_IF            [reduce using rule 5 (prog_body)]
    TK_FOR           [reduce using rule 5 (prog_body)]
    TK_WHILE         [reduce using rule 5 (prog_body)]
    '['              [reduce using rule 5 (prog_body)]
    '('              [reduce using rule 5 (prog_body)]
    $default         reduce using rule 5 (prog_body)

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 60

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   62    | exp TK_SMALLER . exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 104
    funccall_statement  go to state 39


State 61

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   63    | exp TK_BIGGER . exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 105
    funccall_statement  go to state 39


State 62

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   65    | exp TK_POWER . exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 106
    funccall_statement  go to state 39


State 63

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   59    | exp TK_EQ . exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 107
    funccall_statement  go to state 39


State 64

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   58    | exp TK_NEQ . exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 108
    funccall_statement  go to state 39


State 65

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   64    | exp TK_SIGNOP . exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 109
    funccall_statement  go to state 39


State 66

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   56    | exp TK_AND . exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 110
    funccall_statement  go to state 39


State 67

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   55    | exp TK_OR . exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 111
    funccall_statement  go to state 39


State 68

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   57    | exp TK_NOT . exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 112
    funccall_statement  go to state 39


State 69

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   54    | exp TK_ASSIGNOP . exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 113
    funccall_statement  go to state 39


State 70

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   50    | exp '=' . exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 114
    funccall_statement  go to state 39


State 71

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   60    | exp '<' . exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 115
    funccall_statement  go to state 39


State 72

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   61    | exp '>' . exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 116
    funccall_statement  go to state 39


State 73

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   51    | exp '*' . exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 117
    funccall_statement  go to state 39


State 74

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   52    | exp '/' . exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 118
    funccall_statement  go to state 39


State 75

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   53    | exp '%' . exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 119
    funccall_statement  go to state 39


State 76

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   69    | exp '(' . exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 120
    funccall_statement  go to state 39


State 77

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   66    | exp '.' . exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 121
    funccall_statement  go to state 39


State 78

   42 commands: commands . ';' function_body
   85 iff: if_expr commands . ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | if_expr commands . ';' TK_ENDIF

    ';'  shift, and go to state 122


State 79

   12 array: TK_IDENTIFIERS '[' TK_IDENTIFIERS . ']'

    ']'  shift, and go to state 123


State 80

   11 array: TK_IDENTIFIERS '[' TK_INTCONST . ']'

    ']'  shift, and go to state 124


State 81

   10 array: TK_IDENTIFIERS '[' ']' .

    $default  reduce using rule 10 (array)


State 82

   94 funccall_statement: TK_IDENTIFIERS '(' ')' .

    $default  reduce using rule 94 (funccall_statement)


State 83

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'
   75 func_expr: exp .  [')', ',']

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    '.'          shift, and go to state 77

    $default  reduce using rule 75 (func_expr)


State 84

   74 func_expr: func_expr . ',' exp
   93 funccall_statement: TK_IDENTIFIERS '(' func_expr . ')'

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


State 85

   24 func_args: . TK_IDENTIFIERS ':' data_types
   25          | . TK_IDENTIFIERS '[' ']' ':' data_types
   26          | . TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types
   27          | . func_args ',' func_args
   28 function_head: TK_DEF TK_IDENTIFIERS '(' . ')' ':'
   29              | TK_DEF TK_IDENTIFIERS '(' . func_args ')' ':'
   30              | TK_DEF TK_IDENTIFIERS '(' . ')' TK_ARROW data_types ':'
   31              | TK_DEF TK_IDENTIFIERS '(' . func_args ')' TK_ARROW data_types ':'
   32              | TK_DEF TK_IDENTIFIERS '(' . ')' TK_ARROW TK_IDENTIFIERS ':'
   33              | TK_DEF TK_IDENTIFIERS '(' . func_args ')' TK_ARROW TK_IDENTIFIERS ':'

    TK_IDENTIFIERS  shift, and go to state 127
    ')'             shift, and go to state 128

    func_args  go to state 129


State 86

   18 constants: TK_CONST TK_IDENTIFIERS '=' . TK_INTCONST ':' data_types
   19          | TK_CONST TK_IDENTIFIERS '=' . TK_SIGNOP TK_INTCONST ':' data_types
   20          | TK_CONST TK_IDENTIFIERS '=' . TK_BOOLCONST ':' data_types
   21          | TK_CONST TK_IDENTIFIERS '=' . TK_CONSTSTRINGS ':' data_types
   22          | TK_CONST TK_IDENTIFIERS '=' . TK_FPCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS '=' . TK_SIGNOP TK_FPCONST ':' data_types

    TK_INTCONST      shift, and go to state 130
    TK_FPCONST       shift, and go to state 131
    TK_BOOLCONST     shift, and go to state 132
    TK_CONSTSTRINGS  shift, and go to state 133
    TK_SIGNOP        shift, and go to state 134


State 87

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'
   84 if_expr: TK_IF '(' exp . ')' ':'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    ')'          shift, and go to state 135
    '.'          shift, and go to state 77


State 88

   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN . '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN . '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    '['  shift, and go to state 136


State 89

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'
   92 while_statement: TK_WHILE '(' exp . ')' ':' commands ';' TK_ENDWHILE

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    ')'          shift, and go to state 137
    '.'          shift, and go to state 77


State 90

   45 comps: TK_COMP TK_IDENTIFIERS ':' . '#' hasht_vars function TK_ENDCOMP

    '#'  shift, and go to state 138


State 91

   68 exp: '[' exp ']' .

    $default  reduce using rule 68 (exp)


State 92

   67 exp: '(' exp ')' .

    $default  reduce using rule 67 (exp)


State 93

   10 array: TK_IDENTIFIERS . '[' ']'
   11      | TK_IDENTIFIERS . '[' TK_INTCONST ']'
   12      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   13 comp_vars: TK_IDENTIFIERS .  [',', ':']

    '['  shift, and go to state 40

    $default  reduce using rule 13 (comp_vars)


State 94

   14 comp_vars: array .

    $default  reduce using rule 14 (comp_vars)


State 95

   15 comp_vars: comp_vars . ',' comp_vars
   15          | comp_vars ',' comp_vars .  [',', ':']

    ','  shift, and go to state 54

    ','       [reduce using rule 15 (comp_vars)]
    $default  reduce using rule 15 (comp_vars)


State 96

    6 data_types: TK_INTCONST .

    $default  reduce using rule 6 (data_types)


State 97

    9 data_types: TK_FPCONST .

    $default  reduce using rule 9 (data_types)


State 98

    7 data_types: TK_BOOLCONST .

    $default  reduce using rule 7 (data_types)


State 99

    8 data_types: TK_CONSTSTRINGS .

    $default  reduce using rule 8 (data_types)


State 100

   16 variables: comp_vars ':' data_types .

    $default  reduce using rule 16 (variables)


State 101

   36 function_end: TK_ENDDEF ';' .

    $default  reduce using rule 36 (function_end)


State 102

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   36 function_end: . TK_ENDDEF ';'
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   43 function: function_head commands ';' . function_end
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_ENDDEF        shift, and go to state 56
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_end        go to state 139
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 103

   42 commands: commands ';' function_body .

    $default  reduce using rule 42 (commands)


State 104

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   62    | exp TK_SMALLER exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 62
    TK_SIGNOP  shift, and go to state 65
    '*'        shift, and go to state 73
    '/'        shift, and go to state 74
    '%'        shift, and go to state 75
    '('        shift, and go to state 76
    '.'        shift, and go to state 77

    $default  reduce using rule 62 (exp)

    Conflict between rule 62 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 62 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 62 and token TK_POWER resolved as shift (TK_SMALLER < TK_POWER).
    Conflict between rule 62 and token TK_EQ resolved as reduce (TK_EQ < TK_SMALLER).
    Conflict between rule 62 and token TK_NEQ resolved as reduce (TK_NEQ < TK_SMALLER).
    Conflict between rule 62 and token TK_SIGNOP resolved as shift (TK_SMALLER < TK_SIGNOP).
    Conflict between rule 62 and token TK_AND resolved as reduce (TK_AND < TK_SMALLER).
    Conflict between rule 62 and token TK_OR resolved as reduce (TK_OR < TK_SMALLER).
    Conflict between rule 62 and token TK_NOT resolved as reduce (TK_NOT < TK_SMALLER).
    Conflict between rule 62 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_SMALLER).
    Conflict between rule 62 and token '=' resolved as reduce ('=' < TK_SMALLER).
    Conflict between rule 62 and token '<' resolved as reduce (%left '<').
    Conflict between rule 62 and token '>' resolved as reduce (%left '>').
    Conflict between rule 62 and token '*' resolved as shift (TK_SMALLER < '*').
    Conflict between rule 62 and token '/' resolved as shift (TK_SMALLER < '/').
    Conflict between rule 62 and token '%' resolved as shift (TK_SMALLER < '%').
    Conflict between rule 62 and token '(' resolved as shift (TK_SMALLER < '(').
    Conflict between rule 62 and token '.' resolved as shift (TK_SMALLER < '.').


State 105

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   63    | exp TK_BIGGER exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 62
    TK_SIGNOP  shift, and go to state 65
    '*'        shift, and go to state 73
    '/'        shift, and go to state 74
    '%'        shift, and go to state 75
    '('        shift, and go to state 76
    '.'        shift, and go to state 77

    $default  reduce using rule 63 (exp)

    Conflict between rule 63 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 63 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 63 and token TK_POWER resolved as shift (TK_BIGGER < TK_POWER).
    Conflict between rule 63 and token TK_EQ resolved as reduce (TK_EQ < TK_BIGGER).
    Conflict between rule 63 and token TK_NEQ resolved as reduce (TK_NEQ < TK_BIGGER).
    Conflict between rule 63 and token TK_SIGNOP resolved as shift (TK_BIGGER < TK_SIGNOP).
    Conflict between rule 63 and token TK_AND resolved as reduce (TK_AND < TK_BIGGER).
    Conflict between rule 63 and token TK_OR resolved as reduce (TK_OR < TK_BIGGER).
    Conflict between rule 63 and token TK_NOT resolved as reduce (TK_NOT < TK_BIGGER).
    Conflict between rule 63 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_BIGGER).
    Conflict between rule 63 and token '=' resolved as reduce ('=' < TK_BIGGER).
    Conflict between rule 63 and token '<' resolved as reduce (%left '<').
    Conflict between rule 63 and token '>' resolved as reduce (%left '>').
    Conflict between rule 63 and token '*' resolved as shift (TK_BIGGER < '*').
    Conflict between rule 63 and token '/' resolved as shift (TK_BIGGER < '/').
    Conflict between rule 63 and token '%' resolved as shift (TK_BIGGER < '%').
    Conflict between rule 63 and token '(' resolved as shift (TK_BIGGER < '(').
    Conflict between rule 63 and token '.' resolved as shift (TK_BIGGER < '.').


State 106

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   65    | exp TK_POWER exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 62
    '('       shift, and go to state 76
    '.'       shift, and go to state 77

    $default  reduce using rule 65 (exp)

    Conflict between rule 65 and token TK_SMALLER resolved as reduce (TK_SMALLER < TK_POWER).
    Conflict between rule 65 and token TK_BIGGER resolved as reduce (TK_BIGGER < TK_POWER).
    Conflict between rule 65 and token TK_POWER resolved as shift (%right TK_POWER).
    Conflict between rule 65 and token TK_EQ resolved as reduce (TK_EQ < TK_POWER).
    Conflict between rule 65 and token TK_NEQ resolved as reduce (TK_NEQ < TK_POWER).
    Conflict between rule 65 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < TK_POWER).
    Conflict between rule 65 and token TK_AND resolved as reduce (TK_AND < TK_POWER).
    Conflict between rule 65 and token TK_OR resolved as reduce (TK_OR < TK_POWER).
    Conflict between rule 65 and token TK_NOT resolved as reduce (TK_NOT < TK_POWER).
    Conflict between rule 65 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_POWER).
    Conflict between rule 65 and token '=' resolved as reduce ('=' < TK_POWER).
    Conflict between rule 65 and token '<' resolved as reduce ('<' < TK_POWER).
    Conflict between rule 65 and token '>' resolved as reduce ('>' < TK_POWER).
    Conflict between rule 65 and token '*' resolved as reduce ('*' < TK_POWER).
    Conflict between rule 65 and token '/' resolved as reduce ('/' < TK_POWER).
    Conflict between rule 65 and token '%' resolved as reduce ('%' < TK_POWER).
    Conflict between rule 65 and token '(' resolved as shift (TK_POWER < '(').
    Conflict between rule 65 and token '.' resolved as shift (TK_POWER < '.').


State 107

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   59    | exp TK_EQ exp .  [TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 60
    TK_BIGGER   shift, and go to state 61
    TK_POWER    shift, and go to state 62
    TK_SIGNOP   shift, and go to state 65
    '<'         shift, and go to state 71
    '>'         shift, and go to state 72
    '*'         shift, and go to state 73
    '/'         shift, and go to state 74
    '%'         shift, and go to state 75
    '('         shift, and go to state 76
    '.'         shift, and go to state 77

    $default  reduce using rule 59 (exp)

    Conflict between rule 59 and token TK_SMALLER resolved as shift (TK_EQ < TK_SMALLER).
    Conflict between rule 59 and token TK_BIGGER resolved as shift (TK_EQ < TK_BIGGER).
    Conflict between rule 59 and token TK_POWER resolved as shift (TK_EQ < TK_POWER).
    Conflict between rule 59 and token TK_EQ resolved as reduce (%left TK_EQ).
    Conflict between rule 59 and token TK_NEQ resolved as reduce (%left TK_NEQ).
    Conflict between rule 59 and token TK_SIGNOP resolved as shift (TK_EQ < TK_SIGNOP).
    Conflict between rule 59 and token TK_AND resolved as reduce (TK_AND < TK_EQ).
    Conflict between rule 59 and token TK_OR resolved as reduce (TK_OR < TK_EQ).
    Conflict between rule 59 and token TK_NOT resolved as reduce (TK_NOT < TK_EQ).
    Conflict between rule 59 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_EQ).
    Conflict between rule 59 and token '=' resolved as reduce ('=' < TK_EQ).
    Conflict between rule 59 and token '<' resolved as shift (TK_EQ < '<').
    Conflict between rule 59 and token '>' resolved as shift (TK_EQ < '>').
    Conflict between rule 59 and token '*' resolved as shift (TK_EQ < '*').
    Conflict between rule 59 and token '/' resolved as shift (TK_EQ < '/').
    Conflict between rule 59 and token '%' resolved as shift (TK_EQ < '%').
    Conflict between rule 59 and token '(' resolved as shift (TK_EQ < '(').
    Conflict between rule 59 and token '.' resolved as shift (TK_EQ < '.').


State 108

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   58    | exp TK_NEQ exp .  [TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 60
    TK_BIGGER   shift, and go to state 61
    TK_POWER    shift, and go to state 62
    TK_SIGNOP   shift, and go to state 65
    '<'         shift, and go to state 71
    '>'         shift, and go to state 72
    '*'         shift, and go to state 73
    '/'         shift, and go to state 74
    '%'         shift, and go to state 75
    '('         shift, and go to state 76
    '.'         shift, and go to state 77

    $default  reduce using rule 58 (exp)

    Conflict between rule 58 and token TK_SMALLER resolved as shift (TK_NEQ < TK_SMALLER).
    Conflict between rule 58 and token TK_BIGGER resolved as shift (TK_NEQ < TK_BIGGER).
    Conflict between rule 58 and token TK_POWER resolved as shift (TK_NEQ < TK_POWER).
    Conflict between rule 58 and token TK_EQ resolved as reduce (%left TK_EQ).
    Conflict between rule 58 and token TK_NEQ resolved as reduce (%left TK_NEQ).
    Conflict between rule 58 and token TK_SIGNOP resolved as shift (TK_NEQ < TK_SIGNOP).
    Conflict between rule 58 and token TK_AND resolved as reduce (TK_AND < TK_NEQ).
    Conflict between rule 58 and token TK_OR resolved as reduce (TK_OR < TK_NEQ).
    Conflict between rule 58 and token TK_NOT resolved as reduce (TK_NOT < TK_NEQ).
    Conflict between rule 58 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_NEQ).
    Conflict between rule 58 and token '=' resolved as reduce ('=' < TK_NEQ).
    Conflict between rule 58 and token '<' resolved as shift (TK_NEQ < '<').
    Conflict between rule 58 and token '>' resolved as shift (TK_NEQ < '>').
    Conflict between rule 58 and token '*' resolved as shift (TK_NEQ < '*').
    Conflict between rule 58 and token '/' resolved as shift (TK_NEQ < '/').
    Conflict between rule 58 and token '%' resolved as shift (TK_NEQ < '%').
    Conflict between rule 58 and token '(' resolved as shift (TK_NEQ < '(').
    Conflict between rule 58 and token '.' resolved as shift (TK_NEQ < '.').


State 109

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   64    | exp TK_SIGNOP exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 62
    TK_SIGNOP  shift, and go to state 65
    '*'        shift, and go to state 73
    '/'        shift, and go to state 74
    '%'        shift, and go to state 75
    '('        shift, and go to state 76
    '.'        shift, and go to state 77

    $default  reduce using rule 64 (exp)

    Conflict between rule 64 and token TK_SMALLER resolved as reduce (TK_SMALLER < TK_SIGNOP).
    Conflict between rule 64 and token TK_BIGGER resolved as reduce (TK_BIGGER < TK_SIGNOP).
    Conflict between rule 64 and token TK_POWER resolved as shift (TK_SIGNOP < TK_POWER).
    Conflict between rule 64 and token TK_EQ resolved as reduce (TK_EQ < TK_SIGNOP).
    Conflict between rule 64 and token TK_NEQ resolved as reduce (TK_NEQ < TK_SIGNOP).
    Conflict between rule 64 and token TK_SIGNOP resolved as shift (%right TK_SIGNOP).
    Conflict between rule 64 and token TK_AND resolved as reduce (TK_AND < TK_SIGNOP).
    Conflict between rule 64 and token TK_OR resolved as reduce (TK_OR < TK_SIGNOP).
    Conflict between rule 64 and token TK_NOT resolved as reduce (TK_NOT < TK_SIGNOP).
    Conflict between rule 64 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_SIGNOP).
    Conflict between rule 64 and token '=' resolved as reduce ('=' < TK_SIGNOP).
    Conflict between rule 64 and token '<' resolved as reduce ('<' < TK_SIGNOP).
    Conflict between rule 64 and token '>' resolved as reduce ('>' < TK_SIGNOP).
    Conflict between rule 64 and token '*' resolved as shift (TK_SIGNOP < '*').
    Conflict between rule 64 and token '/' resolved as shift (TK_SIGNOP < '/').
    Conflict between rule 64 and token '%' resolved as shift (TK_SIGNOP < '%').
    Conflict between rule 64 and token '(' resolved as shift (TK_SIGNOP < '(').
    Conflict between rule 64 and token '.' resolved as shift (TK_SIGNOP < '.').


State 110

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   56    | exp TK_AND exp .  [TK_AND, TK_OR, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 60
    TK_BIGGER   shift, and go to state 61
    TK_POWER    shift, and go to state 62
    TK_EQ       shift, and go to state 63
    TK_NEQ      shift, and go to state 64
    TK_SIGNOP   shift, and go to state 65
    TK_NOT      shift, and go to state 68
    '<'         shift, and go to state 71
    '>'         shift, and go to state 72
    '*'         shift, and go to state 73
    '/'         shift, and go to state 74
    '%'         shift, and go to state 75
    '('         shift, and go to state 76
    '.'         shift, and go to state 77

    $default  reduce using rule 56 (exp)

    Conflict between rule 56 and token TK_SMALLER resolved as shift (TK_AND < TK_SMALLER).
    Conflict between rule 56 and token TK_BIGGER resolved as shift (TK_AND < TK_BIGGER).
    Conflict between rule 56 and token TK_POWER resolved as shift (TK_AND < TK_POWER).
    Conflict between rule 56 and token TK_EQ resolved as shift (TK_AND < TK_EQ).
    Conflict between rule 56 and token TK_NEQ resolved as shift (TK_AND < TK_NEQ).
    Conflict between rule 56 and token TK_SIGNOP resolved as shift (TK_AND < TK_SIGNOP).
    Conflict between rule 56 and token TK_AND resolved as reduce (%left TK_AND).
    Conflict between rule 56 and token TK_OR resolved as reduce (TK_OR < TK_AND).
    Conflict between rule 56 and token TK_NOT resolved as shift (TK_AND < TK_NOT).
    Conflict between rule 56 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_AND).
    Conflict between rule 56 and token '=' resolved as reduce ('=' < TK_AND).
    Conflict between rule 56 and token '<' resolved as shift (TK_AND < '<').
    Conflict between rule 56 and token '>' resolved as shift (TK_AND < '>').
    Conflict between rule 56 and token '*' resolved as shift (TK_AND < '*').
    Conflict between rule 56 and token '/' resolved as shift (TK_AND < '/').
    Conflict between rule 56 and token '%' resolved as shift (TK_AND < '%').
    Conflict between rule 56 and token '(' resolved as shift (TK_AND < '(').
    Conflict between rule 56 and token '.' resolved as shift (TK_AND < '.').


State 111

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   55    | exp TK_OR exp .  [TK_OR, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 60
    TK_BIGGER   shift, and go to state 61
    TK_POWER    shift, and go to state 62
    TK_EQ       shift, and go to state 63
    TK_NEQ      shift, and go to state 64
    TK_SIGNOP   shift, and go to state 65
    TK_AND      shift, and go to state 66
    TK_NOT      shift, and go to state 68
    '<'         shift, and go to state 71
    '>'         shift, and go to state 72
    '*'         shift, and go to state 73
    '/'         shift, and go to state 74
    '%'         shift, and go to state 75
    '('         shift, and go to state 76
    '.'         shift, and go to state 77

    $default  reduce using rule 55 (exp)

    Conflict between rule 55 and token TK_SMALLER resolved as shift (TK_OR < TK_SMALLER).
    Conflict between rule 55 and token TK_BIGGER resolved as shift (TK_OR < TK_BIGGER).
    Conflict between rule 55 and token TK_POWER resolved as shift (TK_OR < TK_POWER).
    Conflict between rule 55 and token TK_EQ resolved as shift (TK_OR < TK_EQ).
    Conflict between rule 55 and token TK_NEQ resolved as shift (TK_OR < TK_NEQ).
    Conflict between rule 55 and token TK_SIGNOP resolved as shift (TK_OR < TK_SIGNOP).
    Conflict between rule 55 and token TK_AND resolved as shift (TK_OR < TK_AND).
    Conflict between rule 55 and token TK_OR resolved as reduce (%left TK_OR).
    Conflict between rule 55 and token TK_NOT resolved as shift (TK_OR < TK_NOT).
    Conflict between rule 55 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_OR).
    Conflict between rule 55 and token '=' resolved as reduce ('=' < TK_OR).
    Conflict between rule 55 and token '<' resolved as shift (TK_OR < '<').
    Conflict between rule 55 and token '>' resolved as shift (TK_OR < '>').
    Conflict between rule 55 and token '*' resolved as shift (TK_OR < '*').
    Conflict between rule 55 and token '/' resolved as shift (TK_OR < '/').
    Conflict between rule 55 and token '%' resolved as shift (TK_OR < '%').
    Conflict between rule 55 and token '(' resolved as shift (TK_OR < '(').
    Conflict between rule 55 and token '.' resolved as shift (TK_OR < '.').


State 112

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   57    | exp TK_NOT exp .  [TK_AND, TK_OR, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 60
    TK_BIGGER   shift, and go to state 61
    TK_POWER    shift, and go to state 62
    TK_EQ       shift, and go to state 63
    TK_NEQ      shift, and go to state 64
    TK_SIGNOP   shift, and go to state 65
    TK_NOT      shift, and go to state 68
    '<'         shift, and go to state 71
    '>'         shift, and go to state 72
    '*'         shift, and go to state 73
    '/'         shift, and go to state 74
    '%'         shift, and go to state 75
    '('         shift, and go to state 76
    '.'         shift, and go to state 77

    $default  reduce using rule 57 (exp)

    Conflict between rule 57 and token TK_SMALLER resolved as shift (TK_NOT < TK_SMALLER).
    Conflict between rule 57 and token TK_BIGGER resolved as shift (TK_NOT < TK_BIGGER).
    Conflict between rule 57 and token TK_POWER resolved as shift (TK_NOT < TK_POWER).
    Conflict between rule 57 and token TK_EQ resolved as shift (TK_NOT < TK_EQ).
    Conflict between rule 57 and token TK_NEQ resolved as shift (TK_NOT < TK_NEQ).
    Conflict between rule 57 and token TK_SIGNOP resolved as shift (TK_NOT < TK_SIGNOP).
    Conflict between rule 57 and token TK_AND resolved as reduce (TK_AND < TK_NOT).
    Conflict between rule 57 and token TK_OR resolved as reduce (TK_OR < TK_NOT).
    Conflict between rule 57 and token TK_NOT resolved as shift (%right TK_NOT).
    Conflict between rule 57 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_NOT).
    Conflict between rule 57 and token '=' resolved as reduce ('=' < TK_NOT).
    Conflict between rule 57 and token '<' resolved as shift (TK_NOT < '<').
    Conflict between rule 57 and token '>' resolved as shift (TK_NOT < '>').
    Conflict between rule 57 and token '*' resolved as shift (TK_NOT < '*').
    Conflict between rule 57 and token '/' resolved as shift (TK_NOT < '/').
    Conflict between rule 57 and token '%' resolved as shift (TK_NOT < '%').
    Conflict between rule 57 and token '(' resolved as shift (TK_NOT < '(').
    Conflict between rule 57 and token '.' resolved as shift (TK_NOT < '.').


State 113

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   54    | exp TK_ASSIGNOP exp .  [']', ')', ';', ',']
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    '.'          shift, and go to state 77

    $default  reduce using rule 54 (exp)

    Conflict between rule 54 and token TK_SMALLER resolved as shift (TK_ASSIGNOP < TK_SMALLER).
    Conflict between rule 54 and token TK_BIGGER resolved as shift (TK_ASSIGNOP < TK_BIGGER).
    Conflict between rule 54 and token TK_POWER resolved as shift (TK_ASSIGNOP < TK_POWER).
    Conflict between rule 54 and token TK_EQ resolved as shift (TK_ASSIGNOP < TK_EQ).
    Conflict between rule 54 and token TK_NEQ resolved as shift (TK_ASSIGNOP < TK_NEQ).
    Conflict between rule 54 and token TK_SIGNOP resolved as shift (TK_ASSIGNOP < TK_SIGNOP).
    Conflict between rule 54 and token TK_AND resolved as shift (TK_ASSIGNOP < TK_AND).
    Conflict between rule 54 and token TK_OR resolved as shift (TK_ASSIGNOP < TK_OR).
    Conflict between rule 54 and token TK_NOT resolved as shift (TK_ASSIGNOP < TK_NOT).
    Conflict between rule 54 and token TK_ASSIGNOP resolved as shift (%right TK_ASSIGNOP).
    Conflict between rule 54 and token '=' resolved as shift (TK_ASSIGNOP < '=').
    Conflict between rule 54 and token '<' resolved as shift (TK_ASSIGNOP < '<').
    Conflict between rule 54 and token '>' resolved as shift (TK_ASSIGNOP < '>').
    Conflict between rule 54 and token '*' resolved as shift (TK_ASSIGNOP < '*').
    Conflict between rule 54 and token '/' resolved as shift (TK_ASSIGNOP < '/').
    Conflict between rule 54 and token '%' resolved as shift (TK_ASSIGNOP < '%').
    Conflict between rule 54 and token '(' resolved as shift (TK_ASSIGNOP < '(').
    Conflict between rule 54 and token '.' resolved as shift (TK_ASSIGNOP < '.').


State 114

   50 exp: exp . '=' exp
   50    | exp '=' exp .  [TK_ASSIGNOP, ']', ')', ';', ',']
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 60
    TK_BIGGER   shift, and go to state 61
    TK_POWER    shift, and go to state 62
    TK_EQ       shift, and go to state 63
    TK_NEQ      shift, and go to state 64
    TK_SIGNOP   shift, and go to state 65
    TK_AND      shift, and go to state 66
    TK_OR       shift, and go to state 67
    TK_NOT      shift, and go to state 68
    '='         shift, and go to state 70
    '<'         shift, and go to state 71
    '>'         shift, and go to state 72
    '*'         shift, and go to state 73
    '/'         shift, and go to state 74
    '%'         shift, and go to state 75
    '('         shift, and go to state 76
    '.'         shift, and go to state 77

    $default  reduce using rule 50 (exp)

    Conflict between rule 50 and token TK_SMALLER resolved as shift ('=' < TK_SMALLER).
    Conflict between rule 50 and token TK_BIGGER resolved as shift ('=' < TK_BIGGER).
    Conflict between rule 50 and token TK_POWER resolved as shift ('=' < TK_POWER).
    Conflict between rule 50 and token TK_EQ resolved as shift ('=' < TK_EQ).
    Conflict between rule 50 and token TK_NEQ resolved as shift ('=' < TK_NEQ).
    Conflict between rule 50 and token TK_SIGNOP resolved as shift ('=' < TK_SIGNOP).
    Conflict between rule 50 and token TK_AND resolved as shift ('=' < TK_AND).
    Conflict between rule 50 and token TK_OR resolved as shift ('=' < TK_OR).
    Conflict between rule 50 and token TK_NOT resolved as shift ('=' < TK_NOT).
    Conflict between rule 50 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '=').
    Conflict between rule 50 and token '=' resolved as shift (%right '=').
    Conflict between rule 50 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 50 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 50 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 50 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 50 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 50 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 50 and token '.' resolved as shift ('=' < '.').


State 115

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   60    | exp '<' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 62
    TK_SIGNOP  shift, and go to state 65
    '*'        shift, and go to state 73
    '/'        shift, and go to state 74
    '%'        shift, and go to state 75
    '('        shift, and go to state 76
    '.'        shift, and go to state 77

    $default  reduce using rule 60 (exp)

    Conflict between rule 60 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 60 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 60 and token TK_POWER resolved as shift ('<' < TK_POWER).
    Conflict between rule 60 and token TK_EQ resolved as reduce (TK_EQ < '<').
    Conflict between rule 60 and token TK_NEQ resolved as reduce (TK_NEQ < '<').
    Conflict between rule 60 and token TK_SIGNOP resolved as shift ('<' < TK_SIGNOP).
    Conflict between rule 60 and token TK_AND resolved as reduce (TK_AND < '<').
    Conflict between rule 60 and token TK_OR resolved as reduce (TK_OR < '<').
    Conflict between rule 60 and token TK_NOT resolved as reduce (TK_NOT < '<').
    Conflict between rule 60 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '<').
    Conflict between rule 60 and token '=' resolved as reduce ('=' < '<').
    Conflict between rule 60 and token '<' resolved as reduce (%left '<').
    Conflict between rule 60 and token '>' resolved as reduce (%left '>').
    Conflict between rule 60 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 60 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 60 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 60 and token '(' resolved as shift ('<' < '(').
    Conflict between rule 60 and token '.' resolved as shift ('<' < '.').


State 116

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   61    | exp '>' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 62
    TK_SIGNOP  shift, and go to state 65
    '*'        shift, and go to state 73
    '/'        shift, and go to state 74
    '%'        shift, and go to state 75
    '('        shift, and go to state 76
    '.'        shift, and go to state 77

    $default  reduce using rule 61 (exp)

    Conflict between rule 61 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 61 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 61 and token TK_POWER resolved as shift ('>' < TK_POWER).
    Conflict between rule 61 and token TK_EQ resolved as reduce (TK_EQ < '>').
    Conflict between rule 61 and token TK_NEQ resolved as reduce (TK_NEQ < '>').
    Conflict between rule 61 and token TK_SIGNOP resolved as shift ('>' < TK_SIGNOP).
    Conflict between rule 61 and token TK_AND resolved as reduce (TK_AND < '>').
    Conflict between rule 61 and token TK_OR resolved as reduce (TK_OR < '>').
    Conflict between rule 61 and token TK_NOT resolved as reduce (TK_NOT < '>').
    Conflict between rule 61 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '>').
    Conflict between rule 61 and token '=' resolved as reduce ('=' < '>').
    Conflict between rule 61 and token '<' resolved as reduce (%left '<').
    Conflict between rule 61 and token '>' resolved as reduce (%left '>').
    Conflict between rule 61 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 61 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 61 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 61 and token '(' resolved as shift ('>' < '(').
    Conflict between rule 61 and token '.' resolved as shift ('>' < '.').


State 117

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   51    | exp '*' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 62
    '('       shift, and go to state 76
    '.'       shift, and go to state 77

    $default  reduce using rule 51 (exp)

    Conflict between rule 51 and token TK_SMALLER resolved as reduce (TK_SMALLER < '*').
    Conflict between rule 51 and token TK_BIGGER resolved as reduce (TK_BIGGER < '*').
    Conflict between rule 51 and token TK_POWER resolved as shift ('*' < TK_POWER).
    Conflict between rule 51 and token TK_EQ resolved as reduce (TK_EQ < '*').
    Conflict between rule 51 and token TK_NEQ resolved as reduce (TK_NEQ < '*').
    Conflict between rule 51 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '*').
    Conflict between rule 51 and token TK_AND resolved as reduce (TK_AND < '*').
    Conflict between rule 51 and token TK_OR resolved as reduce (TK_OR < '*').
    Conflict between rule 51 and token TK_NOT resolved as reduce (TK_NOT < '*').
    Conflict between rule 51 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '*').
    Conflict between rule 51 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 51 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 51 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 51 and token '*' resolved as reduce (%left '*').
    Conflict between rule 51 and token '/' resolved as reduce (%left '/').
    Conflict between rule 51 and token '%' resolved as reduce (%left '%').
    Conflict between rule 51 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 51 and token '.' resolved as shift ('*' < '.').


State 118

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   52    | exp '/' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 62
    '('       shift, and go to state 76
    '.'       shift, and go to state 77

    $default  reduce using rule 52 (exp)

    Conflict between rule 52 and token TK_SMALLER resolved as reduce (TK_SMALLER < '/').
    Conflict between rule 52 and token TK_BIGGER resolved as reduce (TK_BIGGER < '/').
    Conflict between rule 52 and token TK_POWER resolved as shift ('/' < TK_POWER).
    Conflict between rule 52 and token TK_EQ resolved as reduce (TK_EQ < '/').
    Conflict between rule 52 and token TK_NEQ resolved as reduce (TK_NEQ < '/').
    Conflict between rule 52 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '/').
    Conflict between rule 52 and token TK_AND resolved as reduce (TK_AND < '/').
    Conflict between rule 52 and token TK_OR resolved as reduce (TK_OR < '/').
    Conflict between rule 52 and token TK_NOT resolved as reduce (TK_NOT < '/').
    Conflict between rule 52 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '/').
    Conflict between rule 52 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 52 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 52 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 52 and token '*' resolved as reduce (%left '*').
    Conflict between rule 52 and token '/' resolved as reduce (%left '/').
    Conflict between rule 52 and token '%' resolved as reduce (%left '%').
    Conflict between rule 52 and token '(' resolved as shift ('/' < '(').
    Conflict between rule 52 and token '.' resolved as shift ('/' < '.').


State 119

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   53    | exp '%' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 62
    '('       shift, and go to state 76
    '.'       shift, and go to state 77

    $default  reduce using rule 53 (exp)

    Conflict between rule 53 and token TK_SMALLER resolved as reduce (TK_SMALLER < '%').
    Conflict between rule 53 and token TK_BIGGER resolved as reduce (TK_BIGGER < '%').
    Conflict between rule 53 and token TK_POWER resolved as shift ('%' < TK_POWER).
    Conflict between rule 53 and token TK_EQ resolved as reduce (TK_EQ < '%').
    Conflict between rule 53 and token TK_NEQ resolved as reduce (TK_NEQ < '%').
    Conflict between rule 53 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '%').
    Conflict between rule 53 and token TK_AND resolved as reduce (TK_AND < '%').
    Conflict between rule 53 and token TK_OR resolved as reduce (TK_OR < '%').
    Conflict between rule 53 and token TK_NOT resolved as reduce (TK_NOT < '%').
    Conflict between rule 53 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '%').
    Conflict between rule 53 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 53 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 53 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 53 and token '*' resolved as reduce (%left '*').
    Conflict between rule 53 and token '/' resolved as reduce (%left '/').
    Conflict between rule 53 and token '%' resolved as reduce (%left '%').
    Conflict between rule 53 and token '(' resolved as shift ('%' < '(').
    Conflict between rule 53 and token '.' resolved as shift ('%' < '.').


State 120

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'
   69    | exp '(' exp . ')'

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    ')'          shift, and go to state 140
    '.'          shift, and go to state 77


State 121

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   66    | exp '.' exp .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', '(', ')', '.', ';', ',']
   69    | exp . '(' exp ')'

    $default  reduce using rule 66 (exp)

    Conflict between rule 66 and token TK_SMALLER resolved as reduce (TK_SMALLER < '.').
    Conflict between rule 66 and token TK_BIGGER resolved as reduce (TK_BIGGER < '.').
    Conflict between rule 66 and token TK_POWER resolved as reduce (TK_POWER < '.').
    Conflict between rule 66 and token TK_EQ resolved as reduce (TK_EQ < '.').
    Conflict between rule 66 and token TK_NEQ resolved as reduce (TK_NEQ < '.').
    Conflict between rule 66 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '.').
    Conflict between rule 66 and token TK_AND resolved as reduce (TK_AND < '.').
    Conflict between rule 66 and token TK_OR resolved as reduce (TK_OR < '.').
    Conflict between rule 66 and token TK_NOT resolved as reduce (TK_NOT < '.').
    Conflict between rule 66 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '.').
    Conflict between rule 66 and token '=' resolved as reduce ('=' < '.').
    Conflict between rule 66 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 66 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 66 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 66 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 66 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 66 and token '(' resolved as reduce (%left '(').
    Conflict between rule 66 and token '.' resolved as reduce (%left '.').


State 122

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   85    | if_expr commands ';' . TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   86    | if_expr commands ';' . TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_ENDIF         shift, and go to state 141
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    TK_ELSE          shift, and go to state 142
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 123

   12 array: TK_IDENTIFIERS '[' TK_IDENTIFIERS ']' .

    $default  reduce using rule 12 (array)


State 124

   11 array: TK_IDENTIFIERS '[' TK_INTCONST ']' .

    $default  reduce using rule 11 (array)


State 125

   93 funccall_statement: TK_IDENTIFIERS '(' func_expr ')' .

    $default  reduce using rule 93 (funccall_statement)


State 126

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   74 func_expr: func_expr ',' . exp
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 43
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 44
    exp                 go to state 143
    funccall_statement  go to state 39


State 127

   24 func_args: TK_IDENTIFIERS . ':' data_types
   25          | TK_IDENTIFIERS . '[' ']' ':' data_types
   26          | TK_IDENTIFIERS . '[' TK_INTCONST ']' ':' data_types

    '['  shift, and go to state 144
    ':'  shift, and go to state 145


State 128

   28 function_head: TK_DEF TK_IDENTIFIERS '(' ')' . ':'
   30              | TK_DEF TK_IDENTIFIERS '(' ')' . TK_ARROW data_types ':'
   32              | TK_DEF TK_IDENTIFIERS '(' ')' . TK_ARROW TK_IDENTIFIERS ':'

    TK_ARROW  shift, and go to state 146
    ':'       shift, and go to state 147


State 129

   27 func_args: func_args . ',' func_args
   29 function_head: TK_DEF TK_IDENTIFIERS '(' func_args . ')' ':'
   31              | TK_DEF TK_IDENTIFIERS '(' func_args . ')' TK_ARROW data_types ':'
   33              | TK_DEF TK_IDENTIFIERS '(' func_args . ')' TK_ARROW TK_IDENTIFIERS ':'

    ')'  shift, and go to state 148
    ','  shift, and go to state 149


State 130

   18 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST . ':' data_types

    ':'  shift, and go to state 150


State 131

   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_FPCONST . ':' data_types

    ':'  shift, and go to state 151


State 132

   20 constants: TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST . ':' data_types

    ':'  shift, and go to state 152


State 133

   21 constants: TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS . ':' data_types

    ':'  shift, and go to state 153


State 134

   19 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP . TK_INTCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP . TK_FPCONST ':' data_types

    TK_INTCONST  shift, and go to state 154
    TK_FPCONST   shift, and go to state 155


State 135

   84 if_expr: TK_IF '(' exp ')' . ':'

    ':'  shift, and go to state 156


State 136

   87 sss_for: . TK_INTCONST
   88        | . TK_IDENTIFIERS
   89        | . sss_for TK_SIGNOP sss_for
   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' . sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' . sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IDENTIFIERS  shift, and go to state 157
    TK_INTCONST     shift, and go to state 158

    sss_for  go to state 159


State 137

   92 while_statement: TK_WHILE '(' exp ')' . ':' commands ';' TK_ENDWHILE

    ':'  shift, and go to state 160


State 138

   17 hasht_vars: . '#' comp_vars ':' data_types
   45 comps: TK_COMP TK_IDENTIFIERS ':' '#' . hasht_vars function TK_ENDCOMP

    '#'  shift, and go to state 161

    hasht_vars  go to state 162


State 139

   43 function: function_head commands ';' function_end .

    $default  reduce using rule 43 (function)


State 140

   69 exp: exp '(' exp ')' .

    $default  reduce using rule 69 (exp)


State 141

   86 iff: if_expr commands ';' TK_ENDIF .

    $default  reduce using rule 86 (iff)


State 142

   85 iff: if_expr commands ';' TK_ELSE . ':' commands ';' TK_ENDIF

    ':'  shift, and go to state 163


State 143

   50 exp: exp . '=' exp
   51    | exp . '*' exp
   52    | exp . '/' exp
   53    | exp . '%' exp
   54    | exp . TK_ASSIGNOP exp
   55    | exp . TK_OR exp
   56    | exp . TK_AND exp
   57    | exp . TK_NOT exp
   58    | exp . TK_NEQ exp
   59    | exp . TK_EQ exp
   60    | exp . '<' exp
   61    | exp . '>' exp
   62    | exp . TK_SMALLER exp
   63    | exp . TK_BIGGER exp
   64    | exp . TK_SIGNOP exp
   65    | exp . TK_POWER exp
   66    | exp . '.' exp
   69    | exp . '(' exp ')'
   74 func_expr: func_expr ',' exp .  [')', ',']

    TK_SMALLER   shift, and go to state 60
    TK_BIGGER    shift, and go to state 61
    TK_POWER     shift, and go to state 62
    TK_EQ        shift, and go to state 63
    TK_NEQ       shift, and go to state 64
    TK_SIGNOP    shift, and go to state 65
    TK_AND       shift, and go to state 66
    TK_OR        shift, and go to state 67
    TK_NOT       shift, and go to state 68
    TK_ASSIGNOP  shift, and go to state 69
    '='          shift, and go to state 70
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '*'          shift, and go to state 73
    '/'          shift, and go to state 74
    '%'          shift, and go to state 75
    '('          shift, and go to state 76
    '.'          shift, and go to state 77

    $default  reduce using rule 74 (func_expr)


State 144

   25 func_args: TK_IDENTIFIERS '[' . ']' ':' data_types
   26          | TK_IDENTIFIERS '[' . TK_INTCONST ']' ':' data_types

    TK_INTCONST  shift, and go to state 164
    ']'          shift, and go to state 165


State 145

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   24 func_args: TK_IDENTIFIERS ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 166


State 146

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   30 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW . data_types ':'
   32              | TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW . TK_IDENTIFIERS ':'

    TK_IDENTIFIERS   shift, and go to state 167
    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 168


State 147

   28 function_head: TK_DEF TK_IDENTIFIERS '(' ')' ':' .

    $default  reduce using rule 28 (function_head)


State 148

   29 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' . ':'
   31              | TK_DEF TK_IDENTIFIERS '(' func_args ')' . TK_ARROW data_types ':'
   33              | TK_DEF TK_IDENTIFIERS '(' func_args ')' . TK_ARROW TK_IDENTIFIERS ':'

    TK_ARROW  shift, and go to state 169
    ':'       shift, and go to state 170


State 149

   24 func_args: . TK_IDENTIFIERS ':' data_types
   25          | . TK_IDENTIFIERS '[' ']' ':' data_types
   26          | . TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types
   27          | . func_args ',' func_args
   27          | func_args ',' . func_args

    TK_IDENTIFIERS  shift, and go to state 127

    func_args  go to state 171


State 150

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   18 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 172


State 151

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 173


State 152

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   20 constants: TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 174


State 153

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   21 constants: TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 175


State 154

   19 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST . ':' data_types

    ':'  shift, and go to state 176


State 155

   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST . ':' data_types

    ':'  shift, and go to state 177


State 156

   84 if_expr: TK_IF '(' exp ')' ':' .

    $default  reduce using rule 84 (if_expr)


State 157

   88 sss_for: TK_IDENTIFIERS .

    $default  reduce using rule 88 (sss_for)


State 158

   87 sss_for: TK_INTCONST .

    $default  reduce using rule 87 (sss_for)


State 159

   89 sss_for: sss_for . TK_SIGNOP sss_for
   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for . ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for . ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_SIGNOP  shift, and go to state 178
    ':'        shift, and go to state 179


State 160

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   92                | TK_WHILE '(' exp ')' ':' . commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 27
    commands            go to state 180
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 161

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   17 hasht_vars: '#' . comp_vars ':' data_types

    TK_IDENTIFIERS  shift, and go to state 93

    array      go to state 94
    comp_vars  go to state 181


State 162

   28 function_head: . TK_DEF TK_IDENTIFIERS '(' ')' ':'
   29              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   30              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   31              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   32              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   33              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'
   43 function: . function_head commands ';' function_end
   44         | . function_head function_end
   45 comps: TK_COMP TK_IDENTIFIERS ':' '#' hasht_vars . function TK_ENDCOMP

    TK_DEF  shift, and go to state 8

    function_head  go to state 25
    function       go to state 182


State 163

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   85    | if_expr commands ';' TK_ELSE ':' . commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 27
    commands            go to state 183
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 164

   26 func_args: TK_IDENTIFIERS '[' TK_INTCONST . ']' ':' data_types

    ']'  shift, and go to state 184


State 165

   25 func_args: TK_IDENTIFIERS '[' ']' . ':' data_types

    ':'  shift, and go to state 185


State 166

   24 func_args: TK_IDENTIFIERS ':' data_types .

    $default  reduce using rule 24 (func_args)


State 167

   32 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS . ':'

    ':'  shift, and go to state 186


State 168

   30 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types . ':'

    ':'  shift, and go to state 187


State 169

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   31 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW . data_types ':'
   33              | TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW . TK_IDENTIFIERS ':'

    TK_IDENTIFIERS   shift, and go to state 188
    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 189


State 170

   29 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' ':' .

    $default  reduce using rule 29 (function_head)


State 171

   27 func_args: func_args . ',' func_args
   27          | func_args ',' func_args .  [')', ',']

    ','  shift, and go to state 149

    ','       [reduce using rule 27 (func_args)]
    $default  reduce using rule 27 (func_args)


State 172

   18 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types .

    $default  reduce using rule 18 (constants)


State 173

   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types .

    $default  reduce using rule 22 (constants)


State 174

   20 constants: TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types .

    $default  reduce using rule 20 (constants)


State 175

   21 constants: TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types .

    $default  reduce using rule 21 (constants)


State 176

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   19 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 190


State 177

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 191


State 178

   87 sss_for: . TK_INTCONST
   88        | . TK_IDENTIFIERS
   89        | . sss_for TK_SIGNOP sss_for
   89        | sss_for TK_SIGNOP . sss_for

    TK_IDENTIFIERS  shift, and go to state 157
    TK_INTCONST     shift, and go to state 158

    sss_for  go to state 192


State 179

   87 sss_for: . TK_INTCONST
   88        | . TK_IDENTIFIERS
   89        | . sss_for TK_SIGNOP sss_for
   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' . sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' . sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IDENTIFIERS  shift, and go to state 157
    TK_INTCONST     shift, and go to state 158

    sss_for  go to state 193


State 180

   42 commands: commands . ';' function_body
   92 while_statement: TK_WHILE '(' exp ')' ':' commands . ';' TK_ENDWHILE

    ';'  shift, and go to state 194


State 181

   15 comp_vars: comp_vars . ',' comp_vars
   17 hasht_vars: '#' comp_vars . ':' data_types

    ','  shift, and go to state 54
    ':'  shift, and go to state 195


State 182

   45 comps: TK_COMP TK_IDENTIFIERS ':' '#' hasht_vars function . TK_ENDCOMP

    TK_ENDCOMP  shift, and go to state 196


State 183

   42 commands: commands . ';' function_body
   85 iff: if_expr commands ';' TK_ELSE ':' commands . ';' TK_ENDIF

    ';'  shift, and go to state 197


State 184

   26 func_args: TK_IDENTIFIERS '[' TK_INTCONST ']' . ':' data_types

    ':'  shift, and go to state 198


State 185

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   25 func_args: TK_IDENTIFIERS '[' ']' ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 199


State 186

   32 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':' .

    $default  reduce using rule 32 (function_head)


State 187

   30 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':' .

    $default  reduce using rule 30 (function_head)


State 188

   33 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS . ':'

    ':'  shift, and go to state 200


State 189

   31 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types . ':'

    ':'  shift, and go to state 201


State 190

   19 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types .

    $default  reduce using rule 19 (constants)


State 191

   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types .

    $default  reduce using rule 23 (constants)


State 192

   89 sss_for: sss_for . TK_SIGNOP sss_for
   89        | sss_for TK_SIGNOP sss_for .  [']', ':']

    TK_SIGNOP  shift, and go to state 178

    $default  reduce using rule 89 (sss_for)

    Conflict between rule 89 and token TK_SIGNOP resolved as shift (%right TK_SIGNOP).


State 193

   89 sss_for: sss_for . TK_SIGNOP sss_for
   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for . ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for . ']' ':' commands ';' TK_ENDFOR

    TK_SIGNOP  shift, and go to state 178
    ']'        shift, and go to state 202
    ':'        shift, and go to state 203


State 194

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   92                | TK_WHILE '(' exp ')' ':' commands ';' . TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    TK_ENDWHILE      shift, and go to state 204
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 195

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   17 hasht_vars: '#' comp_vars ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 205


State 196

   45 comps: TK_COMP TK_IDENTIFIERS ':' '#' hasht_vars function TK_ENDCOMP .

    $default  reduce using rule 45 (comps)


State 197

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   85    | if_expr commands ';' TK_ELSE ':' commands ';' . TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_ENDIF         shift, and go to state 206
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 198

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   26 func_args: TK_IDENTIFIERS '[' TK_INTCONST ']' ':' . data_types

    TK_INTCONST      shift, and go to state 96
    TK_FPCONST       shift, and go to state 97
    TK_BOOLCONST     shift, and go to state 98
    TK_CONSTSTRINGS  shift, and go to state 99

    data_types  go to state 207


State 199

   25 func_args: TK_IDENTIFIERS '[' ']' ':' data_types .

    $default  reduce using rule 25 (func_args)


State 200

   33 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':' .

    $default  reduce using rule 33 (function_head)


State 201

   31 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':' .

    $default  reduce using rule 31 (function_head)


State 202

   91 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' . ':' commands ';' TK_ENDFOR

    ':'  shift, and go to state 208


State 203

   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' . TK_INTCONST ']' ':' commands ';' TK_ENDFOR

    TK_INTCONST  shift, and go to state 209


State 204

   92 while_statement: TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE .

    $default  reduce using rule 92 (while_statement)


State 205

   17 hasht_vars: '#' comp_vars ':' data_types .

    $default  reduce using rule 17 (hasht_vars)


State 206

   85 iff: if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF .

    $default  reduce using rule 85 (iff)


State 207

   26 func_args: TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types .

    $default  reduce using rule 26 (func_args)


State 208

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' . commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 27
    commands            go to state 210
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 209

   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST . ']' ':' commands ';' TK_ENDFOR

    ']'  shift, and go to state 211


State 210

   42 commands: commands . ';' function_body
   91 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands . ';' TK_ENDFOR

    ';'  shift, and go to state 212


State 211

   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' . ':' commands ';' TK_ENDFOR

    ':'  shift, and go to state 213


State 212

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   91              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' . TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_ENDFOR        shift, and go to state 214
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 213

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   41 commands: . function_body
   42         | . commands ';' function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   90              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' . commands ';' TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 27
    commands            go to state 215
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 214

   91 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR .

    $default  reduce using rule 91 (for_statement)


State 215

   42 commands: commands . ';' function_body
   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands . ';' TK_ENDFOR

    ';'  shift, and go to state 216


State 216

   10 array: . TK_IDENTIFIERS '[' ']'
   11      | . TK_IDENTIFIERS '[' TK_INTCONST ']'
   12      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . array
   15          | . comp_vars ',' comp_vars
   16 variables: . comp_vars ':' data_types
   18 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   19          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   20          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   21          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   22          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   34 function_ret: . TK_RET
   35             | . TK_RET exp
   37 function_body: . variables
   38              | . constants
   39              | . statements
   40              | . exp
   42 commands: commands ';' . function_body
   46 exp: . TK_FPCONST
   47    | . TK_IDENTIFIERS
   48    | . TK_INTCONST
   49    | . TK_SIGNOP exp
   50    | . exp '=' exp
   51    | . exp '*' exp
   52    | . exp '/' exp
   53    | . exp '%' exp
   54    | . exp TK_ASSIGNOP exp
   55    | . exp TK_OR exp
   56    | . exp TK_AND exp
   57    | . exp TK_NOT exp
   58    | . exp TK_NEQ exp
   59    | . exp TK_EQ exp
   60    | . exp '<' exp
   61    | . exp '>' exp
   62    | . exp TK_SMALLER exp
   63    | . exp TK_BIGGER exp
   64    | . exp TK_SIGNOP exp
   65    | . exp TK_POWER exp
   66    | . exp '.' exp
   67    | . '(' exp ')'
   68    | . '[' exp ']'
   69    | . exp '(' exp ')'
   70    | . TK_CONSTSTRINGS
   71    | . TK_BOOLCONST
   72    | . array
   73    | . funccall_statement
   76 statements: . iff
   77           | . for_statement
   78           | . while_statement
   79           | . break_statement
   80           | . continue_statement
   81           | . function_ret
   82 break_statement: . TK_BREAK
   83 continue_statement: . TK_CONTINUE
   84 if_expr: . TK_IF '(' exp ')' ':'
   85 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   86    | . if_expr commands ';' TK_ENDIF
   90 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   90              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' . TK_ENDFOR
   91              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   92 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   93 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   94                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_ENDFOR        shift, and go to state 217
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 21
    comp_vars           go to state 22
    variables           go to state 23
    constants           go to state 24
    function_ret        go to state 26
    function_body       go to state 103
    exp                 go to state 31
    statements          go to state 32
    break_statement     go to state 33
    continue_statement  go to state 34
    if_expr             go to state 35
    iff                 go to state 36
    for_statement       go to state 37
    while_statement     go to state 38
    funccall_statement  go to state 39


State 217

   90 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR .

    $default  reduce using rule 90 (for_statement)

State 3 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 62 conflicts: 16 shift/reduce, 2 reduce/reduce
State 99 conflicts: 1 shift/reduce
State 174 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input prog_body

    3 prog_body: function ';'
    4          | comps
    5          | commands ';'

    6 data_types: TK_INTCONST
    7           | TK_BOOLCONST
    8           | TK_CONSTSTRINGS
    9           | TK_FPCONST

   10 array: TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | TK_IDENTIFIERS '[' ']'

   13 comp_vars: TK_IDENTIFIERS
   14          | '#' TK_IDENTIFIERS
   15          | %empty
   16          | '#' array
   17          | array
   18          | comp_vars ',' comp_vars

   19 variables: comp_vars ':' data_types

   20 all_variables: variables
   21              | all_variables ';' variables

   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types

   28 func_args: TK_IDENTIFIERS ':' data_types
   29          | TK_IDENTIFIERS '[' ']' ':' data_types
   30          | TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types
   31          | func_args ',' func_args

   32 function_head: TK_DEF TK_IDENTIFIERS '(' ')' ':'
   33              | TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   34              | TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   35              | TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   36              | TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'

   38 function_ret: TK_RET
   39             | TK_RET exp

   40 function_end: TK_ENDDEF

   41 function_body: variables
   42              | constants
   43              | statements
   44              | exp

   45 commands: function_body
   46         | commands ';' function_body

   47 function: function_head commands ';' function_end
   48         | function_head function_end

   49 functions: function
   50          | functions ';' function

   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables ';' functions ';' TK_ENDCOMP ';'

   52 exp: TK_FPCONST
   53    | TK_IDENTIFIERS
   54    | TK_INTCONST
   55    | TK_SIGNOP exp
   56    | exp '=' exp
   57    | exp '*' exp
   58    | exp '/' exp
   59    | exp '%' exp
   60    | exp TK_ASSIGNOP exp
   61    | exp TK_OR exp
   62    | exp TK_AND exp
   63    | exp TK_NOT exp
   64    | exp TK_NEQ exp
   65    | exp TK_EQ exp
   66    | exp '<' exp
   67    | exp '>' exp
   68    | exp TK_SMALLER exp
   69    | exp TK_BIGGER exp
   70    | exp TK_SIGNOP exp
   71    | exp TK_POWER exp
   72    | exp '.' exp
   73    | '(' exp ')'
   74    | '[' exp ']'
   75    | exp '(' exp ')'
   76    | TK_CONSTSTRINGS
   77    | TK_BOOLCONST
   78    | array
   79    | funccall_statement

   80 func_expr: func_expr ',' exp
   81          | exp

   82 statements: iff
   83           | for_statement
   84           | while_statement
   85           | break_statement
   86           | continue_statement
   87           | function_ret

   88 break_statement: TK_BREAK

   89 continue_statement: TK_CONTINUE

   90 if_expr: TK_IF '(' exp ')' ':'

   91 iff: if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | if_expr commands ';' TK_ENDIF

   93 sss_for: TK_INTCONST
   94        | TK_IDENTIFIERS
   95        | sss_for TK_SIGNOP sss_for

   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

   98 while_statement: TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE

   99 funccall_statement: TK_IDENTIFIERS '(' func_expr ')'
  100                   | TK_IDENTIFIERS '(' ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 14 16
    '%' (37) 59
    '(' (40) 32 33 34 35 36 37 73 75 90 98 99 100
    ')' (41) 32 33 34 35 36 37 73 75 90 98 99 100
    '*' (42) 57
    ',' (44) 18 31 80
    '.' (46) 72
    '/' (47) 58
    ':' (58) 19 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 51 90 91 96 97 98
    ';' (59) 3 5 21 46 47 50 51 91 92 96 97 98
    '<' (60) 66
    '=' (61) 22 23 24 25 26 27 56
    '>' (62) 67
    '[' (91) 10 11 12 29 30 74 96 97
    ']' (93) 10 11 12 29 30 74 96 97
    error (256)
    TK_IDENTIFIERS <str> (258) 10 11 12 13 14 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 51 53 94 96 97 99 100
    TK_INTCONST <str> (259) 6 10 22 23 30 54 93 96
    TK_FPCONST <str> (260) 9 26 27 52
    TK_BOOLCONST <str> (261) 7 24 77
    TK_CONSTSTRINGS <str> (262) 8 25 76
    TK_DEF <str> (263) 32 33 34 35 36 37
    TK_ENDDEF <str> (264) 40
    TK_RET <str> (265) 38 39
    TK_ARROW <str> (266) 34 35 36 37
    TK_SMALLER <str> (267) 68
    TK_BIGGER <str> (268) 69
    TK_POWER <str> (269) 71
    TK_EQ <str> (270) 65
    TK_NEQ <str> (271) 64
    TK_SIGNOP <str> (272) 23 27 55 70 95
    TK_AND <str> (273) 62
    TK_OR <str> (274) 61
    TK_NOT <str> (275) 63
    TK_ASSIGNOP <str> (276) 60
    TK_CONST <str> (277) 22 23 24 25 26 27
    TK_CONTINUE <str> (278) 89
    TK_BREAK <str> (279) 88
    TK_IF <str> (280) 90
    TK_ENDIF <str> (281) 91 92
    TK_FOR <str> (282) 96 97
    TK_ENDFOR <str> (283) 96 97
    TK_WHILE <str> (284) 98
    TK_ENDWHILE <str> (285) 98
    TK_ELSE <str> (286) 91
    TK_IN <str> (287) 96 97
    TK_COMP <str> (288) 51
    TK_ENDCOMP <str> (289) 51


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    input (51)
        on left: 1 2
        on right: 0 2
    prog_body <str> (52)
        on left: 3 4 5
        on right: 2
    data_types <str> (53)
        on left: 6 7 8 9
        on right: 19 22 23 24 25 26 27 28 29 30 34 35
    array <str> (54)
        on left: 10 11 12
        on right: 16 17 78
    comp_vars <str> (55)
        on left: 13 14 15 16 17 18
        on right: 18 19
    variables <str> (56)
        on left: 19
        on right: 20 21 41
    all_variables <str> (57)
        on left: 20 21
        on right: 21 51
    constants <str> (58)
        on left: 22 23 24 25 26 27
        on right: 42
    func_args <str> (59)
        on left: 28 29 30 31
        on right: 31 33 35 37
    function_head <str> (60)
        on left: 32 33 34 35 36 37
        on right: 47 48
    function_ret <str> (61)
        on left: 38 39
        on right: 87
    function_end <str> (62)
        on left: 40
        on right: 47 48
    function_body <str> (63)
        on left: 41 42 43 44
        on right: 45 46
    commands <str> (64)
        on left: 45 46
        on right: 5 46 47 91 92 96 97 98
    function <str> (65)
        on left: 47 48
        on right: 3 49 50
    functions <str> (66)
        on left: 49 50
        on right: 50 51
    comps <str> (67)
        on left: 51
        on right: 4
    exp <str> (68)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 39 44 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 80 81 90 98
    func_expr <str> (69)
        on left: 80 81
        on right: 80 99
    statements <str> (70)
        on left: 82 83 84 85 86 87
        on right: 43
    break_statement <str> (71)
        on left: 88
        on right: 85
    continue_statement <str> (72)
        on left: 89
        on right: 86
    if_expr <str> (73)
        on left: 90
        on right: 91 92
    iff <str> (74)
        on left: 91 92
        on right: 82
    sss_for <str> (75)
        on left: 93 94 95
        on right: 95 96 97
    for_statement <str> (76)
        on left: 96 97
        on right: 83
    while_statement <str> (77)
        on left: 98
        on right: 84
    funccall_statement <str> (78)
        on left: 99 100
        on right: 79


State 0

    0 $accept: . input $end
    1 input: . %empty
    2      | . input prog_body

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . prog_body
    3 prog_body: . function ';'
    4          | . comps
    5          | . commands ';'
   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   32 function_head: . TK_DEF TK_IDENTIFIERS '(' ')' ':'
   33              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   34              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   35              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   36              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   47 function: . function_head commands ';' function_end
   48         | . function_head function_end
   51 comps: . TK_COMP TK_IDENTIFIERS ':' all_variables ';' functions ';' TK_ENDCOMP ';'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    $end             shift, and go to state 2
    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_DEF           shift, and go to state 8
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    TK_COMP          shift, and go to state 17
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    prog_body           go to state 21
    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_head       go to state 26
    function_ret        go to state 27
    function_body       go to state 28
    commands            go to state 29
    function            go to state 30
    comps               go to state 31
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 2

    0 $accept: input $end .

    $default  accept


State 3

   10 array: TK_IDENTIFIERS . '[' TK_INTCONST ']'
   11      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   12      | TK_IDENTIFIERS . '[' ']'
   13 comp_vars: TK_IDENTIFIERS .  [',', ':']
   53 exp: TK_IDENTIFIERS .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', '(', '.', ';']
   99 funccall_statement: TK_IDENTIFIERS . '(' func_expr ')'
  100                   | TK_IDENTIFIERS . '(' ')'

    '['  shift, and go to state 41
    '('  shift, and go to state 42

    '('       [reduce using rule 53 (exp)]
    ','       reduce using rule 13 (comp_vars)
    ':'       reduce using rule 13 (comp_vars)
    $default  reduce using rule 53 (exp)


State 4

   54 exp: TK_INTCONST .

    $default  reduce using rule 54 (exp)


State 5

   52 exp: TK_FPCONST .

    $default  reduce using rule 52 (exp)


State 6

   77 exp: TK_BOOLCONST .

    $default  reduce using rule 77 (exp)


State 7

   76 exp: TK_CONSTSTRINGS .

    $default  reduce using rule 76 (exp)


State 8

   32 function_head: TK_DEF . TK_IDENTIFIERS '(' ')' ':'
   33              | TK_DEF . TK_IDENTIFIERS '(' func_args ')' ':'
   34              | TK_DEF . TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   35              | TK_DEF . TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   36              | TK_DEF . TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | TK_DEF . TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'

    TK_IDENTIFIERS  shift, and go to state 43


State 9

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   38 function_ret: TK_RET .  [';']
   39             | TK_RET . exp
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    $default  reduce using rule 38 (function_ret)

    array               go to state 45
    exp                 go to state 46
    funccall_statement  go to state 40


State 10

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   55    | TK_SIGNOP . exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 47
    funccall_statement  go to state 40


State 11

   22 constants: TK_CONST . TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | TK_CONST . TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | TK_CONST . TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | TK_CONST . TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | TK_CONST . TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | TK_CONST . TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types

    TK_IDENTIFIERS  shift, and go to state 48


State 12

   89 continue_statement: TK_CONTINUE .

    $default  reduce using rule 89 (continue_statement)


State 13

   88 break_statement: TK_BREAK .

    $default  reduce using rule 88 (break_statement)


State 14

   90 if_expr: TK_IF . '(' exp ')' ':'

    '('  shift, and go to state 49


State 15

   96 for_statement: TK_FOR . TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR . TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IDENTIFIERS  shift, and go to state 50


State 16

   98 while_statement: TK_WHILE . '(' exp ')' ':' commands ';' TK_ENDWHILE

    '('  shift, and go to state 51


State 17

   51 comps: TK_COMP . TK_IDENTIFIERS ':' all_variables ';' functions ';' TK_ENDCOMP ';'

    TK_IDENTIFIERS  shift, and go to state 52


State 18

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   74    | '[' . exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 53
    funccall_statement  go to state 40


State 19

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   73    | '(' . exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 54
    funccall_statement  go to state 40


State 20

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   14 comp_vars: '#' . TK_IDENTIFIERS
   16          | '#' . array

    TK_IDENTIFIERS  shift, and go to state 55

    array  go to state 56


State 21

    2 input: input prog_body .

    $default  reduce using rule 2 (input)


State 22

   17 comp_vars: array .  [',', ':']
   78 exp: array .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', '(', '.', ';']

    ','       reduce using rule 17 (comp_vars)
    ':'       reduce using rule 17 (comp_vars)
    $default  reduce using rule 78 (exp)


State 23

   18 comp_vars: comp_vars . ',' comp_vars
   19 variables: comp_vars . ':' data_types

    ','  shift, and go to state 57
    ':'  shift, and go to state 58


State 24

   41 function_body: variables .

    $default  reduce using rule 41 (function_body)


State 25

   42 function_body: constants .

    $default  reduce using rule 42 (function_body)


State 26

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   40 function_end: . TK_ENDDEF
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   47 function: function_head . commands ';' function_end
   48         | function_head . function_end
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_ENDDEF        shift, and go to state 59
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_end        go to state 60
    function_body       go to state 28
    commands            go to state 61
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 27

   87 statements: function_ret .

    $default  reduce using rule 87 (statements)


State 28

   45 commands: function_body .

    $default  reduce using rule 45 (commands)


State 29

    5 prog_body: commands . ';'
   46 commands: commands . ';' function_body

    ';'  shift, and go to state 62


State 30

    3 prog_body: function . ';'

    ';'  shift, and go to state 63


State 31

    4 prog_body: comps .

    $default  reduce using rule 4 (prog_body)


State 32

   44 function_body: exp .  [';']
   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    '.'          shift, and go to state 81

    $default  reduce using rule 44 (function_body)


State 33

   43 function_body: statements .

    $default  reduce using rule 43 (function_body)


State 34

   85 statements: break_statement .

    $default  reduce using rule 85 (statements)


State 35

   86 statements: continue_statement .

    $default  reduce using rule 86 (statements)


State 36

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   91    | if_expr . commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   92    | if_expr . commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 28
    commands            go to state 82
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 37

   82 statements: iff .

    $default  reduce using rule 82 (statements)


State 38

   83 statements: for_statement .

    $default  reduce using rule 83 (statements)


State 39

   84 statements: while_statement .

    $default  reduce using rule 84 (statements)


State 40

   79 exp: funccall_statement .

    $default  reduce using rule 79 (exp)


State 41

   10 array: TK_IDENTIFIERS '[' . TK_INTCONST ']'
   11      | TK_IDENTIFIERS '[' . TK_IDENTIFIERS ']'
   12      | TK_IDENTIFIERS '[' . ']'

    TK_IDENTIFIERS  shift, and go to state 83
    TK_INTCONST     shift, and go to state 84
    ']'             shift, and go to state 85


State 42

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   80 func_expr: . func_expr ',' exp
   81          | . exp
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
   99                   | TK_IDENTIFIERS '(' . func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'
  100                   | TK_IDENTIFIERS '(' . ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    ')'              shift, and go to state 86

    array               go to state 45
    exp                 go to state 87
    func_expr           go to state 88
    funccall_statement  go to state 40


State 43

   32 function_head: TK_DEF TK_IDENTIFIERS . '(' ')' ':'
   33              | TK_DEF TK_IDENTIFIERS . '(' func_args ')' ':'
   34              | TK_DEF TK_IDENTIFIERS . '(' ')' TK_ARROW data_types ':'
   35              | TK_DEF TK_IDENTIFIERS . '(' func_args ')' TK_ARROW data_types ':'
   36              | TK_DEF TK_IDENTIFIERS . '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | TK_DEF TK_IDENTIFIERS . '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'

    '('  shift, and go to state 89


State 44

   10 array: TK_IDENTIFIERS . '[' TK_INTCONST ']'
   11      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   12      | TK_IDENTIFIERS . '[' ']'
   53 exp: TK_IDENTIFIERS .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', '(', ')', '.', ';', ',']
   99 funccall_statement: TK_IDENTIFIERS . '(' func_expr ')'
  100                   | TK_IDENTIFIERS . '(' ')'

    '['  shift, and go to state 41
    '('  shift, and go to state 42

    '('       [reduce using rule 53 (exp)]
    $default  reduce using rule 53 (exp)


State 45

   78 exp: array .

    $default  reduce using rule 78 (exp)


State 46

   39 function_ret: TK_RET exp .  [';']
   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    '.'          shift, and go to state 81

    $default  reduce using rule 39 (function_ret)


State 47

   55 exp: TK_SIGNOP exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   56    | exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 66
    TK_SIGNOP  shift, and go to state 69
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    '('        shift, and go to state 80
    '.'        shift, and go to state 81

    $default  reduce using rule 55 (exp)

    Conflict between rule 55 and token TK_SMALLER resolved as reduce (TK_SMALLER < TK_SIGNOP).
    Conflict between rule 55 and token TK_BIGGER resolved as reduce (TK_BIGGER < TK_SIGNOP).
    Conflict between rule 55 and token TK_POWER resolved as shift (TK_SIGNOP < TK_POWER).
    Conflict between rule 55 and token TK_EQ resolved as reduce (TK_EQ < TK_SIGNOP).
    Conflict between rule 55 and token TK_NEQ resolved as reduce (TK_NEQ < TK_SIGNOP).
    Conflict between rule 55 and token TK_SIGNOP resolved as shift (%right TK_SIGNOP).
    Conflict between rule 55 and token TK_AND resolved as reduce (TK_AND < TK_SIGNOP).
    Conflict between rule 55 and token TK_OR resolved as reduce (TK_OR < TK_SIGNOP).
    Conflict between rule 55 and token TK_NOT resolved as reduce (TK_NOT < TK_SIGNOP).
    Conflict between rule 55 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_SIGNOP).
    Conflict between rule 55 and token '=' resolved as reduce ('=' < TK_SIGNOP).
    Conflict between rule 55 and token '<' resolved as reduce ('<' < TK_SIGNOP).
    Conflict between rule 55 and token '>' resolved as reduce ('>' < TK_SIGNOP).
    Conflict between rule 55 and token '*' resolved as shift (TK_SIGNOP < '*').
    Conflict between rule 55 and token '/' resolved as shift (TK_SIGNOP < '/').
    Conflict between rule 55 and token '%' resolved as shift (TK_SIGNOP < '%').
    Conflict between rule 55 and token '(' resolved as shift (TK_SIGNOP < '(').
    Conflict between rule 55 and token '.' resolved as shift (TK_SIGNOP < '.').


State 48

   22 constants: TK_CONST TK_IDENTIFIERS . '=' TK_INTCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS . '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | TK_CONST TK_IDENTIFIERS . '=' TK_BOOLCONST ':' data_types
   25          | TK_CONST TK_IDENTIFIERS . '=' TK_CONSTSTRINGS ':' data_types
   26          | TK_CONST TK_IDENTIFIERS . '=' TK_FPCONST ':' data_types
   27          | TK_CONST TK_IDENTIFIERS . '=' TK_SIGNOP TK_FPCONST ':' data_types

    '='  shift, and go to state 90


State 49

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   90 if_expr: TK_IF '(' . exp ')' ':'
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 91
    funccall_statement  go to state 40


State 50

   96 for_statement: TK_FOR TK_IDENTIFIERS . TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS . TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IN  shift, and go to state 92


State 51

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   98 while_statement: TK_WHILE '(' . exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 93
    funccall_statement  go to state 40


State 52

   51 comps: TK_COMP TK_IDENTIFIERS . ':' all_variables ';' functions ';' TK_ENDCOMP ';'

    ':'  shift, and go to state 94


State 53

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   74    | '[' exp . ']'
   75    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    ']'          shift, and go to state 95
    '('          shift, and go to state 80
    '.'          shift, and go to state 81


State 54

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   73    | '(' exp . ')'
   75    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    ')'          shift, and go to state 96
    '.'          shift, and go to state 81


State 55

   10 array: TK_IDENTIFIERS . '[' TK_INTCONST ']'
   11      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   12      | TK_IDENTIFIERS . '[' ']'
   14 comp_vars: '#' TK_IDENTIFIERS .  [',', ':']

    '['  shift, and go to state 41

    $default  reduce using rule 14 (comp_vars)


State 56

   16 comp_vars: '#' array .

    $default  reduce using rule 16 (comp_vars)


State 57

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   18          | comp_vars ',' . comp_vars

    TK_IDENTIFIERS  shift, and go to state 97
    '#'             shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array      go to state 98
    comp_vars  go to state 99


State 58

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   19 variables: comp_vars ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 104


State 59

   40 function_end: TK_ENDDEF .

    $default  reduce using rule 40 (function_end)


State 60

   48 function: function_head function_end .

    $default  reduce using rule 48 (function)


State 61

   46 commands: commands . ';' function_body
   47 function: function_head commands . ';' function_end

    ';'  shift, and go to state 105


State 62

    5 prog_body: commands ';' .  [$end, TK_IDENTIFIERS, TK_INTCONST, TK_FPCONST, TK_BOOLCONST, TK_CONSTSTRINGS, TK_DEF, TK_RET, TK_SIGNOP, TK_CONST, TK_CONTINUE, TK_BREAK, TK_IF, TK_FOR, TK_WHILE, TK_COMP, '[', '(', '#', ',', ':']
   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    TK_IDENTIFIERS   [reduce using rule 5 (prog_body)]
    TK_INTCONST      [reduce using rule 5 (prog_body)]
    TK_FPCONST       [reduce using rule 5 (prog_body)]
    TK_BOOLCONST     [reduce using rule 5 (prog_body)]
    TK_CONSTSTRINGS  [reduce using rule 5 (prog_body)]
    TK_RET           [reduce using rule 5 (prog_body)]
    TK_SIGNOP        [reduce using rule 5 (prog_body)]
    TK_CONST         [reduce using rule 5 (prog_body)]
    TK_CONTINUE      [reduce using rule 5 (prog_body)]
    TK_BREAK         [reduce using rule 5 (prog_body)]
    TK_IF            [reduce using rule 5 (prog_body)]
    TK_FOR           [reduce using rule 5 (prog_body)]
    TK_WHILE         [reduce using rule 5 (prog_body)]
    '['              [reduce using rule 5 (prog_body)]
    '('              [reduce using rule 5 (prog_body)]
    '#'              [reduce using rule 5 (prog_body)]
    ','              reduce using rule 5 (prog_body)
    ','              [reduce using rule 15 (comp_vars)]
    ':'              reduce using rule 5 (prog_body)
    ':'              [reduce using rule 15 (comp_vars)]
    $default         reduce using rule 5 (prog_body)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 63

    3 prog_body: function ';' .

    $default  reduce using rule 3 (prog_body)


State 64

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   68    | exp TK_SMALLER . exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 107
    funccall_statement  go to state 40


State 65

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   69    | exp TK_BIGGER . exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 108
    funccall_statement  go to state 40


State 66

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   71    | exp TK_POWER . exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 109
    funccall_statement  go to state 40


State 67

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   65    | exp TK_EQ . exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 110
    funccall_statement  go to state 40


State 68

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   64    | exp TK_NEQ . exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 111
    funccall_statement  go to state 40


State 69

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   70    | exp TK_SIGNOP . exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 112
    funccall_statement  go to state 40


State 70

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   62    | exp TK_AND . exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 113
    funccall_statement  go to state 40


State 71

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   61    | exp TK_OR . exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 114
    funccall_statement  go to state 40


State 72

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   63    | exp TK_NOT . exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 115
    funccall_statement  go to state 40


State 73

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   60    | exp TK_ASSIGNOP . exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 116
    funccall_statement  go to state 40


State 74

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   56    | exp '=' . exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 117
    funccall_statement  go to state 40


State 75

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   66    | exp '<' . exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 118
    funccall_statement  go to state 40


State 76

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   67    | exp '>' . exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 119
    funccall_statement  go to state 40


State 77

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   57    | exp '*' . exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 120
    funccall_statement  go to state 40


State 78

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   58    | exp '/' . exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 121
    funccall_statement  go to state 40


State 79

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   59    | exp '%' . exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 122
    funccall_statement  go to state 40


State 80

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   75    | exp '(' . exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 123
    funccall_statement  go to state 40


State 81

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   72    | exp '.' . exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 124
    funccall_statement  go to state 40


State 82

   46 commands: commands . ';' function_body
   91 iff: if_expr commands . ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | if_expr commands . ';' TK_ENDIF

    ';'  shift, and go to state 125


State 83

   11 array: TK_IDENTIFIERS '[' TK_IDENTIFIERS . ']'

    ']'  shift, and go to state 126


State 84

   10 array: TK_IDENTIFIERS '[' TK_INTCONST . ']'

    ']'  shift, and go to state 127


State 85

   12 array: TK_IDENTIFIERS '[' ']' .

    $default  reduce using rule 12 (array)


State 86

  100 funccall_statement: TK_IDENTIFIERS '(' ')' .

    $default  reduce using rule 100 (funccall_statement)


State 87

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'
   81 func_expr: exp .  [')', ',']

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    '.'          shift, and go to state 81

    $default  reduce using rule 81 (func_expr)


State 88

   80 func_expr: func_expr . ',' exp
   99 funccall_statement: TK_IDENTIFIERS '(' func_expr . ')'

    ')'  shift, and go to state 128
    ','  shift, and go to state 129


State 89

   28 func_args: . TK_IDENTIFIERS ':' data_types
   29          | . TK_IDENTIFIERS '[' ']' ':' data_types
   30          | . TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types
   31          | . func_args ',' func_args
   32 function_head: TK_DEF TK_IDENTIFIERS '(' . ')' ':'
   33              | TK_DEF TK_IDENTIFIERS '(' . func_args ')' ':'
   34              | TK_DEF TK_IDENTIFIERS '(' . ')' TK_ARROW data_types ':'
   35              | TK_DEF TK_IDENTIFIERS '(' . func_args ')' TK_ARROW data_types ':'
   36              | TK_DEF TK_IDENTIFIERS '(' . ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | TK_DEF TK_IDENTIFIERS '(' . func_args ')' TK_ARROW TK_IDENTIFIERS ':'

    TK_IDENTIFIERS  shift, and go to state 130
    ')'             shift, and go to state 131

    func_args  go to state 132


State 90

   22 constants: TK_CONST TK_IDENTIFIERS '=' . TK_INTCONST ':' data_types
   23          | TK_CONST TK_IDENTIFIERS '=' . TK_SIGNOP TK_INTCONST ':' data_types
   24          | TK_CONST TK_IDENTIFIERS '=' . TK_BOOLCONST ':' data_types
   25          | TK_CONST TK_IDENTIFIERS '=' . TK_CONSTSTRINGS ':' data_types
   26          | TK_CONST TK_IDENTIFIERS '=' . TK_FPCONST ':' data_types
   27          | TK_CONST TK_IDENTIFIERS '=' . TK_SIGNOP TK_FPCONST ':' data_types

    TK_INTCONST      shift, and go to state 133
    TK_FPCONST       shift, and go to state 134
    TK_BOOLCONST     shift, and go to state 135
    TK_CONSTSTRINGS  shift, and go to state 136
    TK_SIGNOP        shift, and go to state 137


State 91

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'
   90 if_expr: TK_IF '(' exp . ')' ':'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    ')'          shift, and go to state 138
    '.'          shift, and go to state 81


State 92

   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN . '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN . '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    '['  shift, and go to state 139


State 93

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'
   98 while_statement: TK_WHILE '(' exp . ')' ':' commands ';' TK_ENDWHILE

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    ')'          shift, and go to state 140
    '.'          shift, and go to state 81


State 94

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   20 all_variables: . variables
   21              | . all_variables ';' variables
   51 comps: TK_COMP TK_IDENTIFIERS ':' . all_variables ';' functions ';' TK_ENDCOMP ';'

    TK_IDENTIFIERS  shift, and go to state 97
    '#'             shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array          go to state 98
    comp_vars      go to state 23
    variables      go to state 141
    all_variables  go to state 142


State 95

   74 exp: '[' exp ']' .

    $default  reduce using rule 74 (exp)


State 96

   73 exp: '(' exp ')' .

    $default  reduce using rule 73 (exp)


State 97

   10 array: TK_IDENTIFIERS . '[' TK_INTCONST ']'
   11      | TK_IDENTIFIERS . '[' TK_IDENTIFIERS ']'
   12      | TK_IDENTIFIERS . '[' ']'
   13 comp_vars: TK_IDENTIFIERS .  [',', ':']

    '['  shift, and go to state 41

    $default  reduce using rule 13 (comp_vars)


State 98

   17 comp_vars: array .

    $default  reduce using rule 17 (comp_vars)


State 99

   18 comp_vars: comp_vars . ',' comp_vars
   18          | comp_vars ',' comp_vars .  [',', ':']

    ','  shift, and go to state 57

    ','       [reduce using rule 18 (comp_vars)]
    $default  reduce using rule 18 (comp_vars)


State 100

    6 data_types: TK_INTCONST .

    $default  reduce using rule 6 (data_types)


State 101

    9 data_types: TK_FPCONST .

    $default  reduce using rule 9 (data_types)


State 102

    7 data_types: TK_BOOLCONST .

    $default  reduce using rule 7 (data_types)


State 103

    8 data_types: TK_CONSTSTRINGS .

    $default  reduce using rule 8 (data_types)


State 104

   19 variables: comp_vars ':' data_types .

    $default  reduce using rule 19 (variables)


State 105

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   40 function_end: . TK_ENDDEF
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   47 function: function_head commands ';' . function_end
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_ENDDEF        shift, and go to state 59
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_end        go to state 143
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 106

   46 commands: commands ';' function_body .

    $default  reduce using rule 46 (commands)


State 107

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   68    | exp TK_SMALLER exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 66
    TK_SIGNOP  shift, and go to state 69
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    '('        shift, and go to state 80
    '.'        shift, and go to state 81

    $default  reduce using rule 68 (exp)

    Conflict between rule 68 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 68 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 68 and token TK_POWER resolved as shift (TK_SMALLER < TK_POWER).
    Conflict between rule 68 and token TK_EQ resolved as reduce (TK_EQ < TK_SMALLER).
    Conflict between rule 68 and token TK_NEQ resolved as reduce (TK_NEQ < TK_SMALLER).
    Conflict between rule 68 and token TK_SIGNOP resolved as shift (TK_SMALLER < TK_SIGNOP).
    Conflict between rule 68 and token TK_AND resolved as reduce (TK_AND < TK_SMALLER).
    Conflict between rule 68 and token TK_OR resolved as reduce (TK_OR < TK_SMALLER).
    Conflict between rule 68 and token TK_NOT resolved as reduce (TK_NOT < TK_SMALLER).
    Conflict between rule 68 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_SMALLER).
    Conflict between rule 68 and token '=' resolved as reduce ('=' < TK_SMALLER).
    Conflict between rule 68 and token '<' resolved as reduce (%left '<').
    Conflict between rule 68 and token '>' resolved as reduce (%left '>').
    Conflict between rule 68 and token '*' resolved as shift (TK_SMALLER < '*').
    Conflict between rule 68 and token '/' resolved as shift (TK_SMALLER < '/').
    Conflict between rule 68 and token '%' resolved as shift (TK_SMALLER < '%').
    Conflict between rule 68 and token '(' resolved as shift (TK_SMALLER < '(').
    Conflict between rule 68 and token '.' resolved as shift (TK_SMALLER < '.').


State 108

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   69    | exp TK_BIGGER exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 66
    TK_SIGNOP  shift, and go to state 69
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    '('        shift, and go to state 80
    '.'        shift, and go to state 81

    $default  reduce using rule 69 (exp)

    Conflict between rule 69 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 69 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 69 and token TK_POWER resolved as shift (TK_BIGGER < TK_POWER).
    Conflict between rule 69 and token TK_EQ resolved as reduce (TK_EQ < TK_BIGGER).
    Conflict between rule 69 and token TK_NEQ resolved as reduce (TK_NEQ < TK_BIGGER).
    Conflict between rule 69 and token TK_SIGNOP resolved as shift (TK_BIGGER < TK_SIGNOP).
    Conflict between rule 69 and token TK_AND resolved as reduce (TK_AND < TK_BIGGER).
    Conflict between rule 69 and token TK_OR resolved as reduce (TK_OR < TK_BIGGER).
    Conflict between rule 69 and token TK_NOT resolved as reduce (TK_NOT < TK_BIGGER).
    Conflict between rule 69 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_BIGGER).
    Conflict between rule 69 and token '=' resolved as reduce ('=' < TK_BIGGER).
    Conflict between rule 69 and token '<' resolved as reduce (%left '<').
    Conflict between rule 69 and token '>' resolved as reduce (%left '>').
    Conflict between rule 69 and token '*' resolved as shift (TK_BIGGER < '*').
    Conflict between rule 69 and token '/' resolved as shift (TK_BIGGER < '/').
    Conflict between rule 69 and token '%' resolved as shift (TK_BIGGER < '%').
    Conflict between rule 69 and token '(' resolved as shift (TK_BIGGER < '(').
    Conflict between rule 69 and token '.' resolved as shift (TK_BIGGER < '.').


State 109

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   71    | exp TK_POWER exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 66
    '('       shift, and go to state 80
    '.'       shift, and go to state 81

    $default  reduce using rule 71 (exp)

    Conflict between rule 71 and token TK_SMALLER resolved as reduce (TK_SMALLER < TK_POWER).
    Conflict between rule 71 and token TK_BIGGER resolved as reduce (TK_BIGGER < TK_POWER).
    Conflict between rule 71 and token TK_POWER resolved as shift (%right TK_POWER).
    Conflict between rule 71 and token TK_EQ resolved as reduce (TK_EQ < TK_POWER).
    Conflict between rule 71 and token TK_NEQ resolved as reduce (TK_NEQ < TK_POWER).
    Conflict between rule 71 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < TK_POWER).
    Conflict between rule 71 and token TK_AND resolved as reduce (TK_AND < TK_POWER).
    Conflict between rule 71 and token TK_OR resolved as reduce (TK_OR < TK_POWER).
    Conflict between rule 71 and token TK_NOT resolved as reduce (TK_NOT < TK_POWER).
    Conflict between rule 71 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_POWER).
    Conflict between rule 71 and token '=' resolved as reduce ('=' < TK_POWER).
    Conflict between rule 71 and token '<' resolved as reduce ('<' < TK_POWER).
    Conflict between rule 71 and token '>' resolved as reduce ('>' < TK_POWER).
    Conflict between rule 71 and token '*' resolved as reduce ('*' < TK_POWER).
    Conflict between rule 71 and token '/' resolved as reduce ('/' < TK_POWER).
    Conflict between rule 71 and token '%' resolved as reduce ('%' < TK_POWER).
    Conflict between rule 71 and token '(' resolved as shift (TK_POWER < '(').
    Conflict between rule 71 and token '.' resolved as shift (TK_POWER < '.').


State 110

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   65    | exp TK_EQ exp .  [TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 64
    TK_BIGGER   shift, and go to state 65
    TK_POWER    shift, and go to state 66
    TK_SIGNOP   shift, and go to state 69
    '<'         shift, and go to state 75
    '>'         shift, and go to state 76
    '*'         shift, and go to state 77
    '/'         shift, and go to state 78
    '%'         shift, and go to state 79
    '('         shift, and go to state 80
    '.'         shift, and go to state 81

    $default  reduce using rule 65 (exp)

    Conflict between rule 65 and token TK_SMALLER resolved as shift (TK_EQ < TK_SMALLER).
    Conflict between rule 65 and token TK_BIGGER resolved as shift (TK_EQ < TK_BIGGER).
    Conflict between rule 65 and token TK_POWER resolved as shift (TK_EQ < TK_POWER).
    Conflict between rule 65 and token TK_EQ resolved as reduce (%left TK_EQ).
    Conflict between rule 65 and token TK_NEQ resolved as reduce (%left TK_NEQ).
    Conflict between rule 65 and token TK_SIGNOP resolved as shift (TK_EQ < TK_SIGNOP).
    Conflict between rule 65 and token TK_AND resolved as reduce (TK_AND < TK_EQ).
    Conflict between rule 65 and token TK_OR resolved as reduce (TK_OR < TK_EQ).
    Conflict between rule 65 and token TK_NOT resolved as reduce (TK_NOT < TK_EQ).
    Conflict between rule 65 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_EQ).
    Conflict between rule 65 and token '=' resolved as reduce ('=' < TK_EQ).
    Conflict between rule 65 and token '<' resolved as shift (TK_EQ < '<').
    Conflict between rule 65 and token '>' resolved as shift (TK_EQ < '>').
    Conflict between rule 65 and token '*' resolved as shift (TK_EQ < '*').
    Conflict between rule 65 and token '/' resolved as shift (TK_EQ < '/').
    Conflict between rule 65 and token '%' resolved as shift (TK_EQ < '%').
    Conflict between rule 65 and token '(' resolved as shift (TK_EQ < '(').
    Conflict between rule 65 and token '.' resolved as shift (TK_EQ < '.').


State 111

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   64    | exp TK_NEQ exp .  [TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 64
    TK_BIGGER   shift, and go to state 65
    TK_POWER    shift, and go to state 66
    TK_SIGNOP   shift, and go to state 69
    '<'         shift, and go to state 75
    '>'         shift, and go to state 76
    '*'         shift, and go to state 77
    '/'         shift, and go to state 78
    '%'         shift, and go to state 79
    '('         shift, and go to state 80
    '.'         shift, and go to state 81

    $default  reduce using rule 64 (exp)

    Conflict between rule 64 and token TK_SMALLER resolved as shift (TK_NEQ < TK_SMALLER).
    Conflict between rule 64 and token TK_BIGGER resolved as shift (TK_NEQ < TK_BIGGER).
    Conflict between rule 64 and token TK_POWER resolved as shift (TK_NEQ < TK_POWER).
    Conflict between rule 64 and token TK_EQ resolved as reduce (%left TK_EQ).
    Conflict between rule 64 and token TK_NEQ resolved as reduce (%left TK_NEQ).
    Conflict between rule 64 and token TK_SIGNOP resolved as shift (TK_NEQ < TK_SIGNOP).
    Conflict between rule 64 and token TK_AND resolved as reduce (TK_AND < TK_NEQ).
    Conflict between rule 64 and token TK_OR resolved as reduce (TK_OR < TK_NEQ).
    Conflict between rule 64 and token TK_NOT resolved as reduce (TK_NOT < TK_NEQ).
    Conflict between rule 64 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_NEQ).
    Conflict between rule 64 and token '=' resolved as reduce ('=' < TK_NEQ).
    Conflict between rule 64 and token '<' resolved as shift (TK_NEQ < '<').
    Conflict between rule 64 and token '>' resolved as shift (TK_NEQ < '>').
    Conflict between rule 64 and token '*' resolved as shift (TK_NEQ < '*').
    Conflict between rule 64 and token '/' resolved as shift (TK_NEQ < '/').
    Conflict between rule 64 and token '%' resolved as shift (TK_NEQ < '%').
    Conflict between rule 64 and token '(' resolved as shift (TK_NEQ < '(').
    Conflict between rule 64 and token '.' resolved as shift (TK_NEQ < '.').


State 112

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   70    | exp TK_SIGNOP exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 66
    TK_SIGNOP  shift, and go to state 69
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    '('        shift, and go to state 80
    '.'        shift, and go to state 81

    $default  reduce using rule 70 (exp)

    Conflict between rule 70 and token TK_SMALLER resolved as reduce (TK_SMALLER < TK_SIGNOP).
    Conflict between rule 70 and token TK_BIGGER resolved as reduce (TK_BIGGER < TK_SIGNOP).
    Conflict between rule 70 and token TK_POWER resolved as shift (TK_SIGNOP < TK_POWER).
    Conflict between rule 70 and token TK_EQ resolved as reduce (TK_EQ < TK_SIGNOP).
    Conflict between rule 70 and token TK_NEQ resolved as reduce (TK_NEQ < TK_SIGNOP).
    Conflict between rule 70 and token TK_SIGNOP resolved as shift (%right TK_SIGNOP).
    Conflict between rule 70 and token TK_AND resolved as reduce (TK_AND < TK_SIGNOP).
    Conflict between rule 70 and token TK_OR resolved as reduce (TK_OR < TK_SIGNOP).
    Conflict between rule 70 and token TK_NOT resolved as reduce (TK_NOT < TK_SIGNOP).
    Conflict between rule 70 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_SIGNOP).
    Conflict between rule 70 and token '=' resolved as reduce ('=' < TK_SIGNOP).
    Conflict between rule 70 and token '<' resolved as reduce ('<' < TK_SIGNOP).
    Conflict between rule 70 and token '>' resolved as reduce ('>' < TK_SIGNOP).
    Conflict between rule 70 and token '*' resolved as shift (TK_SIGNOP < '*').
    Conflict between rule 70 and token '/' resolved as shift (TK_SIGNOP < '/').
    Conflict between rule 70 and token '%' resolved as shift (TK_SIGNOP < '%').
    Conflict between rule 70 and token '(' resolved as shift (TK_SIGNOP < '(').
    Conflict between rule 70 and token '.' resolved as shift (TK_SIGNOP < '.').


State 113

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   62    | exp TK_AND exp .  [TK_AND, TK_OR, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 64
    TK_BIGGER   shift, and go to state 65
    TK_POWER    shift, and go to state 66
    TK_EQ       shift, and go to state 67
    TK_NEQ      shift, and go to state 68
    TK_SIGNOP   shift, and go to state 69
    TK_NOT      shift, and go to state 72
    '<'         shift, and go to state 75
    '>'         shift, and go to state 76
    '*'         shift, and go to state 77
    '/'         shift, and go to state 78
    '%'         shift, and go to state 79
    '('         shift, and go to state 80
    '.'         shift, and go to state 81

    $default  reduce using rule 62 (exp)

    Conflict between rule 62 and token TK_SMALLER resolved as shift (TK_AND < TK_SMALLER).
    Conflict between rule 62 and token TK_BIGGER resolved as shift (TK_AND < TK_BIGGER).
    Conflict between rule 62 and token TK_POWER resolved as shift (TK_AND < TK_POWER).
    Conflict between rule 62 and token TK_EQ resolved as shift (TK_AND < TK_EQ).
    Conflict between rule 62 and token TK_NEQ resolved as shift (TK_AND < TK_NEQ).
    Conflict between rule 62 and token TK_SIGNOP resolved as shift (TK_AND < TK_SIGNOP).
    Conflict between rule 62 and token TK_AND resolved as reduce (%left TK_AND).
    Conflict between rule 62 and token TK_OR resolved as reduce (TK_OR < TK_AND).
    Conflict between rule 62 and token TK_NOT resolved as shift (TK_AND < TK_NOT).
    Conflict between rule 62 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_AND).
    Conflict between rule 62 and token '=' resolved as reduce ('=' < TK_AND).
    Conflict between rule 62 and token '<' resolved as shift (TK_AND < '<').
    Conflict between rule 62 and token '>' resolved as shift (TK_AND < '>').
    Conflict between rule 62 and token '*' resolved as shift (TK_AND < '*').
    Conflict between rule 62 and token '/' resolved as shift (TK_AND < '/').
    Conflict between rule 62 and token '%' resolved as shift (TK_AND < '%').
    Conflict between rule 62 and token '(' resolved as shift (TK_AND < '(').
    Conflict between rule 62 and token '.' resolved as shift (TK_AND < '.').


State 114

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   61    | exp TK_OR exp .  [TK_OR, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 64
    TK_BIGGER   shift, and go to state 65
    TK_POWER    shift, and go to state 66
    TK_EQ       shift, and go to state 67
    TK_NEQ      shift, and go to state 68
    TK_SIGNOP   shift, and go to state 69
    TK_AND      shift, and go to state 70
    TK_NOT      shift, and go to state 72
    '<'         shift, and go to state 75
    '>'         shift, and go to state 76
    '*'         shift, and go to state 77
    '/'         shift, and go to state 78
    '%'         shift, and go to state 79
    '('         shift, and go to state 80
    '.'         shift, and go to state 81

    $default  reduce using rule 61 (exp)

    Conflict between rule 61 and token TK_SMALLER resolved as shift (TK_OR < TK_SMALLER).
    Conflict between rule 61 and token TK_BIGGER resolved as shift (TK_OR < TK_BIGGER).
    Conflict between rule 61 and token TK_POWER resolved as shift (TK_OR < TK_POWER).
    Conflict between rule 61 and token TK_EQ resolved as shift (TK_OR < TK_EQ).
    Conflict between rule 61 and token TK_NEQ resolved as shift (TK_OR < TK_NEQ).
    Conflict between rule 61 and token TK_SIGNOP resolved as shift (TK_OR < TK_SIGNOP).
    Conflict between rule 61 and token TK_AND resolved as shift (TK_OR < TK_AND).
    Conflict between rule 61 and token TK_OR resolved as reduce (%left TK_OR).
    Conflict between rule 61 and token TK_NOT resolved as shift (TK_OR < TK_NOT).
    Conflict between rule 61 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_OR).
    Conflict between rule 61 and token '=' resolved as reduce ('=' < TK_OR).
    Conflict between rule 61 and token '<' resolved as shift (TK_OR < '<').
    Conflict between rule 61 and token '>' resolved as shift (TK_OR < '>').
    Conflict between rule 61 and token '*' resolved as shift (TK_OR < '*').
    Conflict between rule 61 and token '/' resolved as shift (TK_OR < '/').
    Conflict between rule 61 and token '%' resolved as shift (TK_OR < '%').
    Conflict between rule 61 and token '(' resolved as shift (TK_OR < '(').
    Conflict between rule 61 and token '.' resolved as shift (TK_OR < '.').


State 115

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   63    | exp TK_NOT exp .  [TK_AND, TK_OR, TK_ASSIGNOP, '=', ']', ')', ';', ',']
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 64
    TK_BIGGER   shift, and go to state 65
    TK_POWER    shift, and go to state 66
    TK_EQ       shift, and go to state 67
    TK_NEQ      shift, and go to state 68
    TK_SIGNOP   shift, and go to state 69
    TK_NOT      shift, and go to state 72
    '<'         shift, and go to state 75
    '>'         shift, and go to state 76
    '*'         shift, and go to state 77
    '/'         shift, and go to state 78
    '%'         shift, and go to state 79
    '('         shift, and go to state 80
    '.'         shift, and go to state 81

    $default  reduce using rule 63 (exp)

    Conflict between rule 63 and token TK_SMALLER resolved as shift (TK_NOT < TK_SMALLER).
    Conflict between rule 63 and token TK_BIGGER resolved as shift (TK_NOT < TK_BIGGER).
    Conflict between rule 63 and token TK_POWER resolved as shift (TK_NOT < TK_POWER).
    Conflict between rule 63 and token TK_EQ resolved as shift (TK_NOT < TK_EQ).
    Conflict between rule 63 and token TK_NEQ resolved as shift (TK_NOT < TK_NEQ).
    Conflict between rule 63 and token TK_SIGNOP resolved as shift (TK_NOT < TK_SIGNOP).
    Conflict between rule 63 and token TK_AND resolved as reduce (TK_AND < TK_NOT).
    Conflict between rule 63 and token TK_OR resolved as reduce (TK_OR < TK_NOT).
    Conflict between rule 63 and token TK_NOT resolved as shift (%right TK_NOT).
    Conflict between rule 63 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < TK_NOT).
    Conflict between rule 63 and token '=' resolved as reduce ('=' < TK_NOT).
    Conflict between rule 63 and token '<' resolved as shift (TK_NOT < '<').
    Conflict between rule 63 and token '>' resolved as shift (TK_NOT < '>').
    Conflict between rule 63 and token '*' resolved as shift (TK_NOT < '*').
    Conflict between rule 63 and token '/' resolved as shift (TK_NOT < '/').
    Conflict between rule 63 and token '%' resolved as shift (TK_NOT < '%').
    Conflict between rule 63 and token '(' resolved as shift (TK_NOT < '(').
    Conflict between rule 63 and token '.' resolved as shift (TK_NOT < '.').


State 116

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   60    | exp TK_ASSIGNOP exp .  [']', ')', ';', ',']
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    '.'          shift, and go to state 81

    $default  reduce using rule 60 (exp)

    Conflict between rule 60 and token TK_SMALLER resolved as shift (TK_ASSIGNOP < TK_SMALLER).
    Conflict between rule 60 and token TK_BIGGER resolved as shift (TK_ASSIGNOP < TK_BIGGER).
    Conflict between rule 60 and token TK_POWER resolved as shift (TK_ASSIGNOP < TK_POWER).
    Conflict between rule 60 and token TK_EQ resolved as shift (TK_ASSIGNOP < TK_EQ).
    Conflict between rule 60 and token TK_NEQ resolved as shift (TK_ASSIGNOP < TK_NEQ).
    Conflict between rule 60 and token TK_SIGNOP resolved as shift (TK_ASSIGNOP < TK_SIGNOP).
    Conflict between rule 60 and token TK_AND resolved as shift (TK_ASSIGNOP < TK_AND).
    Conflict between rule 60 and token TK_OR resolved as shift (TK_ASSIGNOP < TK_OR).
    Conflict between rule 60 and token TK_NOT resolved as shift (TK_ASSIGNOP < TK_NOT).
    Conflict between rule 60 and token TK_ASSIGNOP resolved as shift (%right TK_ASSIGNOP).
    Conflict between rule 60 and token '=' resolved as shift (TK_ASSIGNOP < '=').
    Conflict between rule 60 and token '<' resolved as shift (TK_ASSIGNOP < '<').
    Conflict between rule 60 and token '>' resolved as shift (TK_ASSIGNOP < '>').
    Conflict between rule 60 and token '*' resolved as shift (TK_ASSIGNOP < '*').
    Conflict between rule 60 and token '/' resolved as shift (TK_ASSIGNOP < '/').
    Conflict between rule 60 and token '%' resolved as shift (TK_ASSIGNOP < '%').
    Conflict between rule 60 and token '(' resolved as shift (TK_ASSIGNOP < '(').
    Conflict between rule 60 and token '.' resolved as shift (TK_ASSIGNOP < '.').


State 117

   56 exp: exp . '=' exp
   56    | exp '=' exp .  [TK_ASSIGNOP, ']', ')', ';', ',']
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_SMALLER  shift, and go to state 64
    TK_BIGGER   shift, and go to state 65
    TK_POWER    shift, and go to state 66
    TK_EQ       shift, and go to state 67
    TK_NEQ      shift, and go to state 68
    TK_SIGNOP   shift, and go to state 69
    TK_AND      shift, and go to state 70
    TK_OR       shift, and go to state 71
    TK_NOT      shift, and go to state 72
    '='         shift, and go to state 74
    '<'         shift, and go to state 75
    '>'         shift, and go to state 76
    '*'         shift, and go to state 77
    '/'         shift, and go to state 78
    '%'         shift, and go to state 79
    '('         shift, and go to state 80
    '.'         shift, and go to state 81

    $default  reduce using rule 56 (exp)

    Conflict between rule 56 and token TK_SMALLER resolved as shift ('=' < TK_SMALLER).
    Conflict between rule 56 and token TK_BIGGER resolved as shift ('=' < TK_BIGGER).
    Conflict between rule 56 and token TK_POWER resolved as shift ('=' < TK_POWER).
    Conflict between rule 56 and token TK_EQ resolved as shift ('=' < TK_EQ).
    Conflict between rule 56 and token TK_NEQ resolved as shift ('=' < TK_NEQ).
    Conflict between rule 56 and token TK_SIGNOP resolved as shift ('=' < TK_SIGNOP).
    Conflict between rule 56 and token TK_AND resolved as shift ('=' < TK_AND).
    Conflict between rule 56 and token TK_OR resolved as shift ('=' < TK_OR).
    Conflict between rule 56 and token TK_NOT resolved as shift ('=' < TK_NOT).
    Conflict between rule 56 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '=').
    Conflict between rule 56 and token '=' resolved as shift (%right '=').
    Conflict between rule 56 and token '<' resolved as shift ('=' < '<').
    Conflict between rule 56 and token '>' resolved as shift ('=' < '>').
    Conflict between rule 56 and token '*' resolved as shift ('=' < '*').
    Conflict between rule 56 and token '/' resolved as shift ('=' < '/').
    Conflict between rule 56 and token '%' resolved as shift ('=' < '%').
    Conflict between rule 56 and token '(' resolved as shift ('=' < '(').
    Conflict between rule 56 and token '.' resolved as shift ('=' < '.').


State 118

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   66    | exp '<' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 66
    TK_SIGNOP  shift, and go to state 69
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    '('        shift, and go to state 80
    '.'        shift, and go to state 81

    $default  reduce using rule 66 (exp)

    Conflict between rule 66 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 66 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 66 and token TK_POWER resolved as shift ('<' < TK_POWER).
    Conflict between rule 66 and token TK_EQ resolved as reduce (TK_EQ < '<').
    Conflict between rule 66 and token TK_NEQ resolved as reduce (TK_NEQ < '<').
    Conflict between rule 66 and token TK_SIGNOP resolved as shift ('<' < TK_SIGNOP).
    Conflict between rule 66 and token TK_AND resolved as reduce (TK_AND < '<').
    Conflict between rule 66 and token TK_OR resolved as reduce (TK_OR < '<').
    Conflict between rule 66 and token TK_NOT resolved as reduce (TK_NOT < '<').
    Conflict between rule 66 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '<').
    Conflict between rule 66 and token '=' resolved as reduce ('=' < '<').
    Conflict between rule 66 and token '<' resolved as reduce (%left '<').
    Conflict between rule 66 and token '>' resolved as reduce (%left '>').
    Conflict between rule 66 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 66 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 66 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 66 and token '(' resolved as shift ('<' < '(').
    Conflict between rule 66 and token '.' resolved as shift ('<' < '.').


State 119

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   67    | exp '>' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', ']', ')', ';', ',']
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER   shift, and go to state 66
    TK_SIGNOP  shift, and go to state 69
    '*'        shift, and go to state 77
    '/'        shift, and go to state 78
    '%'        shift, and go to state 79
    '('        shift, and go to state 80
    '.'        shift, and go to state 81

    $default  reduce using rule 67 (exp)

    Conflict between rule 67 and token TK_SMALLER resolved as reduce (%left TK_SMALLER).
    Conflict between rule 67 and token TK_BIGGER resolved as reduce (%left TK_BIGGER).
    Conflict between rule 67 and token TK_POWER resolved as shift ('>' < TK_POWER).
    Conflict between rule 67 and token TK_EQ resolved as reduce (TK_EQ < '>').
    Conflict between rule 67 and token TK_NEQ resolved as reduce (TK_NEQ < '>').
    Conflict between rule 67 and token TK_SIGNOP resolved as shift ('>' < TK_SIGNOP).
    Conflict between rule 67 and token TK_AND resolved as reduce (TK_AND < '>').
    Conflict between rule 67 and token TK_OR resolved as reduce (TK_OR < '>').
    Conflict between rule 67 and token TK_NOT resolved as reduce (TK_NOT < '>').
    Conflict between rule 67 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '>').
    Conflict between rule 67 and token '=' resolved as reduce ('=' < '>').
    Conflict between rule 67 and token '<' resolved as reduce (%left '<').
    Conflict between rule 67 and token '>' resolved as reduce (%left '>').
    Conflict between rule 67 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 67 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 67 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 67 and token '(' resolved as shift ('>' < '(').
    Conflict between rule 67 and token '.' resolved as shift ('>' < '.').


State 120

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   57    | exp '*' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 66
    '('       shift, and go to state 80
    '.'       shift, and go to state 81

    $default  reduce using rule 57 (exp)

    Conflict between rule 57 and token TK_SMALLER resolved as reduce (TK_SMALLER < '*').
    Conflict between rule 57 and token TK_BIGGER resolved as reduce (TK_BIGGER < '*').
    Conflict between rule 57 and token TK_POWER resolved as shift ('*' < TK_POWER).
    Conflict between rule 57 and token TK_EQ resolved as reduce (TK_EQ < '*').
    Conflict between rule 57 and token TK_NEQ resolved as reduce (TK_NEQ < '*').
    Conflict between rule 57 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '*').
    Conflict between rule 57 and token TK_AND resolved as reduce (TK_AND < '*').
    Conflict between rule 57 and token TK_OR resolved as reduce (TK_OR < '*').
    Conflict between rule 57 and token TK_NOT resolved as reduce (TK_NOT < '*').
    Conflict between rule 57 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '*').
    Conflict between rule 57 and token '=' resolved as reduce ('=' < '*').
    Conflict between rule 57 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 57 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 57 and token '*' resolved as reduce (%left '*').
    Conflict between rule 57 and token '/' resolved as reduce (%left '/').
    Conflict between rule 57 and token '%' resolved as reduce (%left '%').
    Conflict between rule 57 and token '(' resolved as shift ('*' < '(').
    Conflict between rule 57 and token '.' resolved as shift ('*' < '.').


State 121

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   58    | exp '/' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 66
    '('       shift, and go to state 80
    '.'       shift, and go to state 81

    $default  reduce using rule 58 (exp)

    Conflict between rule 58 and token TK_SMALLER resolved as reduce (TK_SMALLER < '/').
    Conflict between rule 58 and token TK_BIGGER resolved as reduce (TK_BIGGER < '/').
    Conflict between rule 58 and token TK_POWER resolved as shift ('/' < TK_POWER).
    Conflict between rule 58 and token TK_EQ resolved as reduce (TK_EQ < '/').
    Conflict between rule 58 and token TK_NEQ resolved as reduce (TK_NEQ < '/').
    Conflict between rule 58 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '/').
    Conflict between rule 58 and token TK_AND resolved as reduce (TK_AND < '/').
    Conflict between rule 58 and token TK_OR resolved as reduce (TK_OR < '/').
    Conflict between rule 58 and token TK_NOT resolved as reduce (TK_NOT < '/').
    Conflict between rule 58 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '/').
    Conflict between rule 58 and token '=' resolved as reduce ('=' < '/').
    Conflict between rule 58 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 58 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 58 and token '*' resolved as reduce (%left '*').
    Conflict between rule 58 and token '/' resolved as reduce (%left '/').
    Conflict between rule 58 and token '%' resolved as reduce (%left '%').
    Conflict between rule 58 and token '(' resolved as shift ('/' < '(').
    Conflict between rule 58 and token '.' resolved as shift ('/' < '.').


State 122

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   59    | exp '%' exp .  [TK_SMALLER, TK_BIGGER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', ')', ';', ',']
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'

    TK_POWER  shift, and go to state 66
    '('       shift, and go to state 80
    '.'       shift, and go to state 81

    $default  reduce using rule 59 (exp)

    Conflict between rule 59 and token TK_SMALLER resolved as reduce (TK_SMALLER < '%').
    Conflict between rule 59 and token TK_BIGGER resolved as reduce (TK_BIGGER < '%').
    Conflict between rule 59 and token TK_POWER resolved as shift ('%' < TK_POWER).
    Conflict between rule 59 and token TK_EQ resolved as reduce (TK_EQ < '%').
    Conflict between rule 59 and token TK_NEQ resolved as reduce (TK_NEQ < '%').
    Conflict between rule 59 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '%').
    Conflict between rule 59 and token TK_AND resolved as reduce (TK_AND < '%').
    Conflict between rule 59 and token TK_OR resolved as reduce (TK_OR < '%').
    Conflict between rule 59 and token TK_NOT resolved as reduce (TK_NOT < '%').
    Conflict between rule 59 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '%').
    Conflict between rule 59 and token '=' resolved as reduce ('=' < '%').
    Conflict between rule 59 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 59 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 59 and token '*' resolved as reduce (%left '*').
    Conflict between rule 59 and token '/' resolved as reduce (%left '/').
    Conflict between rule 59 and token '%' resolved as reduce (%left '%').
    Conflict between rule 59 and token '(' resolved as shift ('%' < '(').
    Conflict between rule 59 and token '.' resolved as shift ('%' < '.').


State 123

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'
   75    | exp '(' exp . ')'

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    ')'          shift, and go to state 144
    '.'          shift, and go to state 81


State 124

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   72    | exp '.' exp .  [TK_SMALLER, TK_BIGGER, TK_POWER, TK_EQ, TK_NEQ, TK_SIGNOP, TK_AND, TK_OR, TK_NOT, TK_ASSIGNOP, '=', '<', '>', '*', '/', '%', ']', '(', ')', '.', ';', ',']
   75    | exp . '(' exp ')'

    $default  reduce using rule 72 (exp)

    Conflict between rule 72 and token TK_SMALLER resolved as reduce (TK_SMALLER < '.').
    Conflict between rule 72 and token TK_BIGGER resolved as reduce (TK_BIGGER < '.').
    Conflict between rule 72 and token TK_POWER resolved as reduce (TK_POWER < '.').
    Conflict between rule 72 and token TK_EQ resolved as reduce (TK_EQ < '.').
    Conflict between rule 72 and token TK_NEQ resolved as reduce (TK_NEQ < '.').
    Conflict between rule 72 and token TK_SIGNOP resolved as reduce (TK_SIGNOP < '.').
    Conflict between rule 72 and token TK_AND resolved as reduce (TK_AND < '.').
    Conflict between rule 72 and token TK_OR resolved as reduce (TK_OR < '.').
    Conflict between rule 72 and token TK_NOT resolved as reduce (TK_NOT < '.').
    Conflict between rule 72 and token TK_ASSIGNOP resolved as reduce (TK_ASSIGNOP < '.').
    Conflict between rule 72 and token '=' resolved as reduce ('=' < '.').
    Conflict between rule 72 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 72 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 72 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 72 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 72 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 72 and token '(' resolved as reduce (%left '(').
    Conflict between rule 72 and token '.' resolved as reduce (%left '.').


State 125

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   91    | if_expr commands ';' . TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   92    | if_expr commands ';' . TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_ENDIF         shift, and go to state 145
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    TK_ELSE          shift, and go to state 146
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 126

   11 array: TK_IDENTIFIERS '[' TK_IDENTIFIERS ']' .

    $default  reduce using rule 11 (array)


State 127

   10 array: TK_IDENTIFIERS '[' TK_INTCONST ']' .

    $default  reduce using rule 10 (array)


State 128

   99 funccall_statement: TK_IDENTIFIERS '(' func_expr ')' .

    $default  reduce using rule 99 (funccall_statement)


State 129

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   80 func_expr: func_expr ',' . exp
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 44
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_SIGNOP        shift, and go to state 10
    '['              shift, and go to state 18
    '('              shift, and go to state 19

    array               go to state 45
    exp                 go to state 147
    funccall_statement  go to state 40


State 130

   28 func_args: TK_IDENTIFIERS . ':' data_types
   29          | TK_IDENTIFIERS . '[' ']' ':' data_types
   30          | TK_IDENTIFIERS . '[' TK_INTCONST ']' ':' data_types

    '['  shift, and go to state 148
    ':'  shift, and go to state 149


State 131

   32 function_head: TK_DEF TK_IDENTIFIERS '(' ')' . ':'
   34              | TK_DEF TK_IDENTIFIERS '(' ')' . TK_ARROW data_types ':'
   36              | TK_DEF TK_IDENTIFIERS '(' ')' . TK_ARROW TK_IDENTIFIERS ':'

    TK_ARROW  shift, and go to state 150
    ':'       shift, and go to state 151


State 132

   31 func_args: func_args . ',' func_args
   33 function_head: TK_DEF TK_IDENTIFIERS '(' func_args . ')' ':'
   35              | TK_DEF TK_IDENTIFIERS '(' func_args . ')' TK_ARROW data_types ':'
   37              | TK_DEF TK_IDENTIFIERS '(' func_args . ')' TK_ARROW TK_IDENTIFIERS ':'

    ')'  shift, and go to state 152
    ','  shift, and go to state 153


State 133

   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST . ':' data_types

    ':'  shift, and go to state 154


State 134

   26 constants: TK_CONST TK_IDENTIFIERS '=' TK_FPCONST . ':' data_types

    ':'  shift, and go to state 155


State 135

   24 constants: TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST . ':' data_types

    ':'  shift, and go to state 156


State 136

   25 constants: TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS . ':' data_types

    ':'  shift, and go to state 157


State 137

   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP . TK_INTCONST ':' data_types
   27          | TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP . TK_FPCONST ':' data_types

    TK_INTCONST  shift, and go to state 158
    TK_FPCONST   shift, and go to state 159


State 138

   90 if_expr: TK_IF '(' exp ')' . ':'

    ':'  shift, and go to state 160


State 139

   93 sss_for: . TK_INTCONST
   94        | . TK_IDENTIFIERS
   95        | . sss_for TK_SIGNOP sss_for
   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' . sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' . sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IDENTIFIERS  shift, and go to state 161
    TK_INTCONST     shift, and go to state 162

    sss_for  go to state 163


State 140

   98 while_statement: TK_WHILE '(' exp ')' . ':' commands ';' TK_ENDWHILE

    ':'  shift, and go to state 164


State 141

   20 all_variables: variables .

    $default  reduce using rule 20 (all_variables)


State 142

   21 all_variables: all_variables . ';' variables
   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables . ';' functions ';' TK_ENDCOMP ';'

    ';'  shift, and go to state 165


State 143

   47 function: function_head commands ';' function_end .

    $default  reduce using rule 47 (function)


State 144

   75 exp: exp '(' exp ')' .

    $default  reduce using rule 75 (exp)


State 145

   92 iff: if_expr commands ';' TK_ENDIF .

    $default  reduce using rule 92 (iff)


State 146

   91 iff: if_expr commands ';' TK_ELSE . ':' commands ';' TK_ENDIF

    ':'  shift, and go to state 166


State 147

   56 exp: exp . '=' exp
   57    | exp . '*' exp
   58    | exp . '/' exp
   59    | exp . '%' exp
   60    | exp . TK_ASSIGNOP exp
   61    | exp . TK_OR exp
   62    | exp . TK_AND exp
   63    | exp . TK_NOT exp
   64    | exp . TK_NEQ exp
   65    | exp . TK_EQ exp
   66    | exp . '<' exp
   67    | exp . '>' exp
   68    | exp . TK_SMALLER exp
   69    | exp . TK_BIGGER exp
   70    | exp . TK_SIGNOP exp
   71    | exp . TK_POWER exp
   72    | exp . '.' exp
   75    | exp . '(' exp ')'
   80 func_expr: func_expr ',' exp .  [')', ',']

    TK_SMALLER   shift, and go to state 64
    TK_BIGGER    shift, and go to state 65
    TK_POWER     shift, and go to state 66
    TK_EQ        shift, and go to state 67
    TK_NEQ       shift, and go to state 68
    TK_SIGNOP    shift, and go to state 69
    TK_AND       shift, and go to state 70
    TK_OR        shift, and go to state 71
    TK_NOT       shift, and go to state 72
    TK_ASSIGNOP  shift, and go to state 73
    '='          shift, and go to state 74
    '<'          shift, and go to state 75
    '>'          shift, and go to state 76
    '*'          shift, and go to state 77
    '/'          shift, and go to state 78
    '%'          shift, and go to state 79
    '('          shift, and go to state 80
    '.'          shift, and go to state 81

    $default  reduce using rule 80 (func_expr)


State 148

   29 func_args: TK_IDENTIFIERS '[' . ']' ':' data_types
   30          | TK_IDENTIFIERS '[' . TK_INTCONST ']' ':' data_types

    TK_INTCONST  shift, and go to state 167
    ']'          shift, and go to state 168


State 149

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   28 func_args: TK_IDENTIFIERS ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 169


State 150

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   34 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW . data_types ':'
   36              | TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW . TK_IDENTIFIERS ':'

    TK_IDENTIFIERS   shift, and go to state 170
    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 171


State 151

   32 function_head: TK_DEF TK_IDENTIFIERS '(' ')' ':' .

    $default  reduce using rule 32 (function_head)


State 152

   33 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' . ':'
   35              | TK_DEF TK_IDENTIFIERS '(' func_args ')' . TK_ARROW data_types ':'
   37              | TK_DEF TK_IDENTIFIERS '(' func_args ')' . TK_ARROW TK_IDENTIFIERS ':'

    TK_ARROW  shift, and go to state 172
    ':'       shift, and go to state 173


State 153

   28 func_args: . TK_IDENTIFIERS ':' data_types
   29          | . TK_IDENTIFIERS '[' ']' ':' data_types
   30          | . TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types
   31          | . func_args ',' func_args
   31          | func_args ',' . func_args

    TK_IDENTIFIERS  shift, and go to state 130

    func_args  go to state 174


State 154

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 175


State 155

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   26 constants: TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 176


State 156

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   24 constants: TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 177


State 157

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   25 constants: TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 178


State 158

   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST . ':' data_types

    ':'  shift, and go to state 179


State 159

   27 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST . ':' data_types

    ':'  shift, and go to state 180


State 160

   90 if_expr: TK_IF '(' exp ')' ':' .

    $default  reduce using rule 90 (if_expr)


State 161

   94 sss_for: TK_IDENTIFIERS .

    $default  reduce using rule 94 (sss_for)


State 162

   93 sss_for: TK_INTCONST .

    $default  reduce using rule 93 (sss_for)


State 163

   95 sss_for: sss_for . TK_SIGNOP sss_for
   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for . ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for . ':' sss_for ']' ':' commands ';' TK_ENDFOR

    TK_SIGNOP  shift, and go to state 181
    ':'        shift, and go to state 182


State 164

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   98                | TK_WHILE '(' exp ')' ':' . commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 28
    commands            go to state 183
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 165

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   21 all_variables: all_variables ';' . variables
   32 function_head: . TK_DEF TK_IDENTIFIERS '(' ')' ':'
   33              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   34              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   35              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   36              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'
   47 function: . function_head commands ';' function_end
   48         | . function_head function_end
   49 functions: . function
   50          | . functions ';' function
   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables ';' . functions ';' TK_ENDCOMP ';'

    TK_IDENTIFIERS  shift, and go to state 97
    TK_DEF          shift, and go to state 8
    '#'             shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array          go to state 98
    comp_vars      go to state 23
    variables      go to state 184
    function_head  go to state 26
    function       go to state 185
    functions      go to state 186


State 166

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   91    | if_expr commands ';' TK_ELSE ':' . commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 28
    commands            go to state 187
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 167

   30 func_args: TK_IDENTIFIERS '[' TK_INTCONST . ']' ':' data_types

    ']'  shift, and go to state 188


State 168

   29 func_args: TK_IDENTIFIERS '[' ']' . ':' data_types

    ':'  shift, and go to state 189


State 169

   28 func_args: TK_IDENTIFIERS ':' data_types .

    $default  reduce using rule 28 (func_args)


State 170

   36 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS . ':'

    ':'  shift, and go to state 190


State 171

   34 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types . ':'

    ':'  shift, and go to state 191


State 172

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   35 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW . data_types ':'
   37              | TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW . TK_IDENTIFIERS ':'

    TK_IDENTIFIERS   shift, and go to state 192
    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 193


State 173

   33 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' ':' .

    $default  reduce using rule 33 (function_head)


State 174

   31 func_args: func_args . ',' func_args
   31          | func_args ',' func_args .  [')', ',']

    ','  shift, and go to state 153

    ','       [reduce using rule 31 (func_args)]
    $default  reduce using rule 31 (func_args)


State 175

   22 constants: TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types .

    $default  reduce using rule 22 (constants)


State 176

   26 constants: TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types .

    $default  reduce using rule 26 (constants)


State 177

   24 constants: TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types .

    $default  reduce using rule 24 (constants)


State 178

   25 constants: TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types .

    $default  reduce using rule 25 (constants)


State 179

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 194


State 180

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   27 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 195


State 181

   93 sss_for: . TK_INTCONST
   94        | . TK_IDENTIFIERS
   95        | . sss_for TK_SIGNOP sss_for
   95        | sss_for TK_SIGNOP . sss_for

    TK_IDENTIFIERS  shift, and go to state 161
    TK_INTCONST     shift, and go to state 162

    sss_for  go to state 196


State 182

   93 sss_for: . TK_INTCONST
   94        | . TK_IDENTIFIERS
   95        | . sss_for TK_SIGNOP sss_for
   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' . sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' . sss_for ']' ':' commands ';' TK_ENDFOR

    TK_IDENTIFIERS  shift, and go to state 161
    TK_INTCONST     shift, and go to state 162

    sss_for  go to state 197


State 183

   46 commands: commands . ';' function_body
   98 while_statement: TK_WHILE '(' exp ')' ':' commands . ';' TK_ENDWHILE

    ';'  shift, and go to state 198


State 184

   21 all_variables: all_variables ';' variables .

    $default  reduce using rule 21 (all_variables)


State 185

   49 functions: function .

    $default  reduce using rule 49 (functions)


State 186

   50 functions: functions . ';' function
   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables ';' functions . ';' TK_ENDCOMP ';'

    ';'  shift, and go to state 199


State 187

   46 commands: commands . ';' function_body
   91 iff: if_expr commands ';' TK_ELSE ':' commands . ';' TK_ENDIF

    ';'  shift, and go to state 200


State 188

   30 func_args: TK_IDENTIFIERS '[' TK_INTCONST ']' . ':' data_types

    ':'  shift, and go to state 201


State 189

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   29 func_args: TK_IDENTIFIERS '[' ']' ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 202


State 190

   36 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':' .

    $default  reduce using rule 36 (function_head)


State 191

   34 function_head: TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':' .

    $default  reduce using rule 34 (function_head)


State 192

   37 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS . ':'

    ':'  shift, and go to state 203


State 193

   35 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types . ':'

    ':'  shift, and go to state 204


State 194

   23 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types .

    $default  reduce using rule 23 (constants)


State 195

   27 constants: TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types .

    $default  reduce using rule 27 (constants)


State 196

   95 sss_for: sss_for . TK_SIGNOP sss_for
   95        | sss_for TK_SIGNOP sss_for .  [']', ':']

    TK_SIGNOP  shift, and go to state 181

    $default  reduce using rule 95 (sss_for)

    Conflict between rule 95 and token TK_SIGNOP resolved as shift (%right TK_SIGNOP).


State 197

   95 sss_for: sss_for . TK_SIGNOP sss_for
   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for . ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for . ']' ':' commands ';' TK_ENDFOR

    TK_SIGNOP  shift, and go to state 181
    ']'        shift, and go to state 205
    ':'        shift, and go to state 206


State 198

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   98                | TK_WHILE '(' exp ')' ':' commands ';' . TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    TK_ENDWHILE      shift, and go to state 207
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 199

   32 function_head: . TK_DEF TK_IDENTIFIERS '(' ')' ':'
   33              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' ':'
   34              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW data_types ':'
   35              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':'
   36              | . TK_DEF TK_IDENTIFIERS '(' ')' TK_ARROW TK_IDENTIFIERS ':'
   37              | . TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':'
   47 function: . function_head commands ';' function_end
   48         | . function_head function_end
   50 functions: functions ';' . function
   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables ';' functions ';' . TK_ENDCOMP ';'

    TK_DEF      shift, and go to state 8
    TK_ENDCOMP  shift, and go to state 208

    function_head  go to state 26
    function       go to state 209


State 200

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   91    | if_expr commands ';' TK_ELSE ':' commands ';' . TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_ENDIF         shift, and go to state 210
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 201

    6 data_types: . TK_INTCONST
    7           | . TK_BOOLCONST
    8           | . TK_CONSTSTRINGS
    9           | . TK_FPCONST
   30 func_args: TK_IDENTIFIERS '[' TK_INTCONST ']' ':' . data_types

    TK_INTCONST      shift, and go to state 100
    TK_FPCONST       shift, and go to state 101
    TK_BOOLCONST     shift, and go to state 102
    TK_CONSTSTRINGS  shift, and go to state 103

    data_types  go to state 211


State 202

   29 func_args: TK_IDENTIFIERS '[' ']' ':' data_types .

    $default  reduce using rule 29 (func_args)


State 203

   37 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW TK_IDENTIFIERS ':' .

    $default  reduce using rule 37 (function_head)


State 204

   35 function_head: TK_DEF TK_IDENTIFIERS '(' func_args ')' TK_ARROW data_types ':' .

    $default  reduce using rule 35 (function_head)


State 205

   97 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' . ':' commands ';' TK_ENDFOR

    ':'  shift, and go to state 212


State 206

   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' . TK_INTCONST ']' ':' commands ';' TK_ENDFOR

    TK_INTCONST  shift, and go to state 213


State 207

   98 while_statement: TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE .

    $default  reduce using rule 98 (while_statement)


State 208

   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables ';' functions ';' TK_ENDCOMP . ';'

    ';'  shift, and go to state 214


State 209

   50 functions: functions ';' function .

    $default  reduce using rule 50 (functions)


State 210

   91 iff: if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF .

    $default  reduce using rule 91 (iff)


State 211

   30 func_args: TK_IDENTIFIERS '[' TK_INTCONST ']' ':' data_types .

    $default  reduce using rule 30 (func_args)


State 212

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' . commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 28
    commands            go to state 215
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 213

   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST . ']' ':' commands ';' TK_ENDFOR

    ']'  shift, and go to state 216


State 214

   51 comps: TK_COMP TK_IDENTIFIERS ':' all_variables ';' functions ';' TK_ENDCOMP ';' .

    $default  reduce using rule 51 (comps)


State 215

   46 commands: commands . ';' function_body
   97 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands . ';' TK_ENDFOR

    ';'  shift, and go to state 217


State 216

   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' . ':' commands ';' TK_ENDFOR

    ':'  shift, and go to state 218


State 217

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   97              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' . TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_ENDFOR        shift, and go to state 219
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 218

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   45 commands: . function_body
   46         | . commands ';' function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   96              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' . commands ';' TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 28
    commands            go to state 220
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 219

   97 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR .

    $default  reduce using rule 97 (for_statement)


State 220

   46 commands: commands . ';' function_body
   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands . ';' TK_ENDFOR

    ';'  shift, and go to state 221


State 221

   10 array: . TK_IDENTIFIERS '[' TK_INTCONST ']'
   11      | . TK_IDENTIFIERS '[' TK_IDENTIFIERS ']'
   12      | . TK_IDENTIFIERS '[' ']'
   13 comp_vars: . TK_IDENTIFIERS
   14          | . '#' TK_IDENTIFIERS
   15          | . %empty  [',', ':']
   16          | . '#' array
   17          | . array
   18          | . comp_vars ',' comp_vars
   19 variables: . comp_vars ':' data_types
   22 constants: . TK_CONST TK_IDENTIFIERS '=' TK_INTCONST ':' data_types
   23          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_INTCONST ':' data_types
   24          | . TK_CONST TK_IDENTIFIERS '=' TK_BOOLCONST ':' data_types
   25          | . TK_CONST TK_IDENTIFIERS '=' TK_CONSTSTRINGS ':' data_types
   26          | . TK_CONST TK_IDENTIFIERS '=' TK_FPCONST ':' data_types
   27          | . TK_CONST TK_IDENTIFIERS '=' TK_SIGNOP TK_FPCONST ':' data_types
   38 function_ret: . TK_RET
   39             | . TK_RET exp
   41 function_body: . variables
   42              | . constants
   43              | . statements
   44              | . exp
   46 commands: commands ';' . function_body
   52 exp: . TK_FPCONST
   53    | . TK_IDENTIFIERS
   54    | . TK_INTCONST
   55    | . TK_SIGNOP exp
   56    | . exp '=' exp
   57    | . exp '*' exp
   58    | . exp '/' exp
   59    | . exp '%' exp
   60    | . exp TK_ASSIGNOP exp
   61    | . exp TK_OR exp
   62    | . exp TK_AND exp
   63    | . exp TK_NOT exp
   64    | . exp TK_NEQ exp
   65    | . exp TK_EQ exp
   66    | . exp '<' exp
   67    | . exp '>' exp
   68    | . exp TK_SMALLER exp
   69    | . exp TK_BIGGER exp
   70    | . exp TK_SIGNOP exp
   71    | . exp TK_POWER exp
   72    | . exp '.' exp
   73    | . '(' exp ')'
   74    | . '[' exp ']'
   75    | . exp '(' exp ')'
   76    | . TK_CONSTSTRINGS
   77    | . TK_BOOLCONST
   78    | . array
   79    | . funccall_statement
   82 statements: . iff
   83           | . for_statement
   84           | . while_statement
   85           | . break_statement
   86           | . continue_statement
   87           | . function_ret
   88 break_statement: . TK_BREAK
   89 continue_statement: . TK_CONTINUE
   90 if_expr: . TK_IF '(' exp ')' ':'
   91 iff: . if_expr commands ';' TK_ELSE ':' commands ';' TK_ENDIF
   92    | . if_expr commands ';' TK_ENDIF
   96 for_statement: . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR
   96              | TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' . TK_ENDFOR
   97              | . TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ']' ':' commands ';' TK_ENDFOR
   98 while_statement: . TK_WHILE '(' exp ')' ':' commands ';' TK_ENDWHILE
   99 funccall_statement: . TK_IDENTIFIERS '(' func_expr ')'
  100                   | . TK_IDENTIFIERS '(' ')'

    TK_IDENTIFIERS   shift, and go to state 3
    TK_INTCONST      shift, and go to state 4
    TK_FPCONST       shift, and go to state 5
    TK_BOOLCONST     shift, and go to state 6
    TK_CONSTSTRINGS  shift, and go to state 7
    TK_RET           shift, and go to state 9
    TK_SIGNOP        shift, and go to state 10
    TK_CONST         shift, and go to state 11
    TK_CONTINUE      shift, and go to state 12
    TK_BREAK         shift, and go to state 13
    TK_IF            shift, and go to state 14
    TK_FOR           shift, and go to state 15
    TK_ENDFOR        shift, and go to state 222
    TK_WHILE         shift, and go to state 16
    '['              shift, and go to state 18
    '('              shift, and go to state 19
    '#'              shift, and go to state 20

    $default  reduce using rule 15 (comp_vars)

    array               go to state 22
    comp_vars           go to state 23
    variables           go to state 24
    constants           go to state 25
    function_ret        go to state 27
    function_body       go to state 106
    exp                 go to state 32
    statements          go to state 33
    break_statement     go to state 34
    continue_statement  go to state 35
    if_expr             go to state 36
    iff                 go to state 37
    for_statement       go to state 38
    while_statement     go to state 39
    funccall_statement  go to state 40


State 222

   96 for_statement: TK_FOR TK_IDENTIFIERS TK_IN '[' sss_for ':' sss_for ':' TK_INTCONST ']' ':' commands ';' TK_ENDFOR .

    $default  reduce using rule 96 (for_statement)
